
WeatherMonitor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000314  00800100  00001d96  00001e2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001d96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  00800414  00800414  0000213e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000213e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000219c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000021dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000119e  00000000  00000000  00002264  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  00003402  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008f8  00000000  00000000  00003cb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  000045b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050d  00000000  00000000  000047a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000092b  00000000  00000000  00004cb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  000055dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bb 00 	jmp	0x176	; 0x176 <__ctors_end>
       4:	0c 94 42 03 	jmp	0x684	; 0x684 <__vector_1>
       8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
       c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      10:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      14:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      18:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      1c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      20:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      24:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      28:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      2c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      30:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      34:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      38:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      3c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      40:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      44:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      48:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      4c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      50:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      54:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      58:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      5c:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      60:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>
      64:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__c.2474>:
     16a:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000176 <__ctors_end>:
     176:	11 24       	eor	r1, r1
     178:	1f be       	out	0x3f, r1	; 63
     17a:	cf ef       	ldi	r28, 0xFF	; 255
     17c:	d8 e0       	ldi	r29, 0x08	; 8
     17e:	de bf       	out	0x3e, r29	; 62
     180:	cd bf       	out	0x3d, r28	; 61

00000182 <__do_copy_data>:
     182:	14 e0       	ldi	r17, 0x04	; 4
     184:	a0 e0       	ldi	r26, 0x00	; 0
     186:	b1 e0       	ldi	r27, 0x01	; 1
     188:	e6 e9       	ldi	r30, 0x96	; 150
     18a:	fd e1       	ldi	r31, 0x1D	; 29
     18c:	02 c0       	rjmp	.+4      	; 0x192 <__do_copy_data+0x10>
     18e:	05 90       	lpm	r0, Z+
     190:	0d 92       	st	X+, r0
     192:	a4 31       	cpi	r26, 0x14	; 20
     194:	b1 07       	cpc	r27, r17
     196:	d9 f7       	brne	.-10     	; 0x18e <__do_copy_data+0xc>

00000198 <__do_clear_bss>:
     198:	24 e0       	ldi	r18, 0x04	; 4
     19a:	a4 e1       	ldi	r26, 0x14	; 20
     19c:	b4 e0       	ldi	r27, 0x04	; 4
     19e:	01 c0       	rjmp	.+2      	; 0x1a2 <.do_clear_bss_start>

000001a0 <.do_clear_bss_loop>:
     1a0:	1d 92       	st	X+, r1

000001a2 <.do_clear_bss_start>:
     1a2:	a9 33       	cpi	r26, 0x39	; 57
     1a4:	b2 07       	cpc	r27, r18
     1a6:	e1 f7       	brne	.-8      	; 0x1a0 <.do_clear_bss_loop>
     1a8:	0e 94 be 02 	call	0x57c	; 0x57c <main>
     1ac:	0c 94 c9 0e 	jmp	0x1d92	; 0x1d92 <_exit>

000001b0 <__bad_interrupt>:
     1b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b4 <usart_init>:



void usart_init() {
	// Set baud rate
	UBRR0H = (unsigned char)(UBRR_VALUE>>8);
     1b4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)UBRR_VALUE;
     1b8:	87 e6       	ldi	r24, 0x67	; 103
     1ba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	// Set frame format to 8 data bits, no parity, 1 stop bit
	UCSR0C |= (1<<UCSZ01)|(1<<UCSZ00);
     1be:	e2 ec       	ldi	r30, 0xC2	; 194
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	86 60       	ori	r24, 0x06	; 6
     1c6:	80 83       	st	Z, r24
	//enable transmission and reception, enable receive interrupt
	UCSR0B |= (1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
     1c8:	e1 ec       	ldi	r30, 0xC1	; 193
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	80 81       	ld	r24, Z
     1ce:	88 69       	ori	r24, 0x98	; 152
     1d0:	80 83       	st	Z, r24
     1d2:	08 95       	ret

000001d4 <usart_receives>:
	
}

unsigned char usart_receives() {
	// Wait for byte to be received
	while(!(UCSR0A&(1<<RXC0))){};
     1d4:	e0 ec       	ldi	r30, 0xC0	; 192
     1d6:	f0 e0       	ldi	r31, 0x00	; 0
     1d8:	80 81       	ld	r24, Z
     1da:	88 23       	and	r24, r24
     1dc:	ec f7       	brge	.-6      	; 0x1d8 <usart_receives+0x4>
	// Return received data
	return UDR0; // get char from buffer
     1de:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     1e2:	08 95       	ret

000001e4 <usart_transmit>:

void usart_transmit(char arr[]) {
     1e4:	0f 93       	push	r16
     1e6:	1f 93       	push	r17
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	dc 01       	movw	r26, r24
     1ee:	8c 01       	movw	r16, r24
	// Uses polling (and it blocks). 
	int j;
	for (j = 0; j <= strlen(arr)-1; j++) {
     1f0:	40 e0       	ldi	r20, 0x00	; 0
     1f2:	50 e0       	ldi	r21, 0x00	; 0
		while (!( UCSR0A & (1<<UDRE0))) {}; // until buffer empty
     1f4:	e0 ec       	ldi	r30, 0xC0	; 192
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = arr[j]; // put the char to the buffer
     1f8:	66 ec       	ldi	r22, 0xC6	; 198
     1fa:	70 e0       	ldi	r23, 0x00	; 0

void usart_transmit(char arr[]) {
	// Uses polling (and it blocks). 
	int j;
	for (j = 0; j <= strlen(arr)-1; j++) {
		while (!( UCSR0A & (1<<UDRE0))) {}; // until buffer empty
     1fc:	90 81       	ld	r25, Z
     1fe:	95 ff       	sbrs	r25, 5
     200:	fd cf       	rjmp	.-6      	; 0x1fc <usart_transmit+0x18>
		UDR0 = arr[j]; // put the char to the buffer
     202:	e8 01       	movw	r28, r16
     204:	89 91       	ld	r24, Y+
     206:	8e 01       	movw	r16, r28
     208:	eb 01       	movw	r28, r22
     20a:	88 83       	st	Y, r24
}

void usart_transmit(char arr[]) {
	// Uses polling (and it blocks). 
	int j;
	for (j = 0; j <= strlen(arr)-1; j++) {
     20c:	4f 5f       	subi	r20, 0xFF	; 255
     20e:	5f 4f       	sbci	r21, 0xFF	; 255
     210:	ed 01       	movw	r28, r26
     212:	09 90       	ld	r0, Y+
     214:	00 20       	and	r0, r0
     216:	e9 f7       	brne	.-6      	; 0x212 <usart_transmit+0x2e>
     218:	9e 01       	movw	r18, r28
     21a:	2a 1b       	sub	r18, r26
     21c:	3b 0b       	sbc	r19, r27
     21e:	22 50       	subi	r18, 0x02	; 2
     220:	31 09       	sbc	r19, r1
     222:	24 17       	cp	r18, r20
     224:	35 07       	cpc	r19, r21
     226:	50 f7       	brcc	.-44     	; 0x1fc <usart_transmit+0x18>
		while (!( UCSR0A & (1<<UDRE0))) {}; // until buffer empty
		UDR0 = arr[j]; // put the char to the buffer
	}
}
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	1f 91       	pop	r17
     22e:	0f 91       	pop	r16
     230:	08 95       	ret

00000232 <readDHT>:

void readDHT() {
     232:	cf 93       	push	r28
     234:	df 93       	push	r29
	uint8_t DHTbyte = 0;
	
	DDRC |= 1<<3; // set PC5 as output
     236:	3b 9a       	sbi	0x07, 3	; 7
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     238:	2f ef       	ldi	r18, 0xFF	; 255
     23a:	50 ee       	ldi	r21, 0xE0	; 224
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	21 50       	subi	r18, 0x01	; 1
     240:	50 40       	sbci	r21, 0x00	; 0
     242:	80 40       	sbci	r24, 0x00	; 0
     244:	e1 f7       	brne	.-8      	; 0x23e <readDHT+0xc>
     246:	00 c0       	rjmp	.+0      	; 0x248 <readDHT+0x16>
     248:	00 00       	nop
	_delay_ms(18.0); // delay for 18ms to initiate the DHT
	DDRC &= ~(1<<3); // set PC5 as input
     24a:	3b 98       	cbi	0x07, 3	; 7

	while(  (PINC&(1<<PINC3)) != 8 ) ; // while still rising
     24c:	33 9b       	sbis	0x06, 3	; 6
     24e:	fe cf       	rjmp	.-4      	; 0x24c <readDHT+0x1a>
	while(PINC&(1<<PINC3)) ; // while rised  
     250:	33 99       	sbic	0x06, 3	; 6
     252:	fe cf       	rjmp	.-4      	; 0x250 <readDHT+0x1e>
	while( (PINC&(1<<PINC3)) != 8 ) ; // while 0 at start
     254:	33 9b       	sbis	0x06, 3	; 6
     256:	fe cf       	rjmp	.-4      	; 0x254 <readDHT+0x22>
	while(PINC&(1<<PINC3)) ; // while 1 at start
     258:	33 99       	sbic	0x06, 3	; 6
     25a:	fe cf       	rjmp	.-4      	; 0x258 <readDHT+0x26>
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	20 e0       	ldi	r18, 0x00	; 0
     262:	30 e0       	ldi	r19, 0x00	; 0
     264:	40 e0       	ldi	r20, 0x00	; 0
	int counter = 0; // number of bits decoded
	while(1) { // start decoding
		while((PINC&(1<<PINC3)) != 8 ) ; // while in gap
		_delay_us(35.0); // delay for 35 us  
		if (PINC&(1<<PINC3)) { // still 1   
			DHTbyte |= 1 << (7 - counter);
     266:	a7 e0       	ldi	r26, 0x07	; 7
     268:	b0 e0       	ldi	r27, 0x00	; 0
     26a:	e1 e0       	ldi	r30, 0x01	; 1
     26c:	f0 e0       	ldi	r31, 0x00	; 0
	while(PINC&(1<<PINC3)) ; // while 1 at start
	
	int received = 0; // number of bytes decoded
	int counter = 0; // number of bits decoded
	while(1) { // start decoding
		while((PINC&(1<<PINC3)) != 8 ) ; // while in gap
     26e:	33 9b       	sbis	0x06, 3	; 6
     270:	fe cf       	rjmp	.-4      	; 0x26e <readDHT+0x3c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     272:	ca eb       	ldi	r28, 0xBA	; 186
     274:	ca 95       	dec	r28
     276:	f1 f7       	brne	.-4      	; 0x274 <readDHT+0x42>
     278:	00 c0       	rjmp	.+0      	; 0x27a <readDHT+0x48>
		_delay_us(35.0); // delay for 35 us  
		if (PINC&(1<<PINC3)) { // still 1   
     27a:	33 9b       	sbis	0x06, 3	; 6
     27c:	0c c0       	rjmp	.+24     	; 0x296 <readDHT+0x64>
			DHTbyte |= 1 << (7 - counter);
     27e:	bd 01       	movw	r22, r26
     280:	68 1b       	sub	r22, r24
     282:	79 0b       	sbc	r23, r25
     284:	ef 01       	movw	r28, r30
     286:	02 c0       	rjmp	.+4      	; 0x28c <readDHT+0x5a>
     288:	cc 0f       	add	r28, r28
     28a:	dd 1f       	adc	r29, r29
     28c:	6a 95       	dec	r22
     28e:	e2 f7       	brpl	.-8      	; 0x288 <readDHT+0x56>
     290:	4c 2b       	or	r20, r28
			while(PINC&(1<<PINC3)) ;
     292:	33 99       	sbic	0x06, 3	; 6
     294:	fe cf       	rjmp	.-4      	; 0x292 <readDHT+0x60>
		} 
		counter++;
     296:	01 96       	adiw	r24, 0x01	; 1
		if (counter == 8) {
     298:	88 30       	cpi	r24, 0x08	; 8
     29a:	91 05       	cpc	r25, r1
     29c:	49 f4       	brne	.+18     	; 0x2b0 <readDHT+0x7e>
			DHTresult[received] = DHTbyte;
     29e:	e9 01       	movw	r28, r18
     2a0:	c4 5e       	subi	r28, 0xE4	; 228
     2a2:	db 4f       	sbci	r29, 0xFB	; 251
     2a4:	48 83       	st	Y, r20
			DHTbyte = 0;
			counter = 0;
			received++; 
     2a6:	2f 5f       	subi	r18, 0xFF	; 255
     2a8:	3f 4f       	sbci	r19, 0xFF	; 255
		} 
		counter++;
		if (counter == 8) {
			DHTresult[received] = DHTbyte;
			DHTbyte = 0;
			counter = 0;
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	90 e0       	ldi	r25, 0x00	; 0
			while(PINC&(1<<PINC3)) ;
		} 
		counter++;
		if (counter == 8) {
			DHTresult[received] = DHTbyte;
			DHTbyte = 0;
     2ae:	40 e0       	ldi	r20, 0x00	; 0
			counter = 0;
			received++; 
		}
		if (received == 5) {
     2b0:	25 30       	cpi	r18, 0x05	; 5
     2b2:	31 05       	cpc	r19, r1
     2b4:	e1 f6       	brne	.-72     	; 0x26e <readDHT+0x3c>
			break;
		}
	}	
		
}
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	08 95       	ret

000002bc <ADC_init>:


void ADC_init() {
	ADMUX = (1 << REFS0); //  AVCC with external capacitor at AREF pin
     2bc:	80 e4       	ldi	r24, 0x40	; 64
     2be:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // enable ADC and set prescalar to /128
     2c2:	87 e8       	ldi	r24, 0x87	; 135
     2c4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     2c8:	08 95       	ret

000002ca <readBrightness>:
}

void readBrightness() {
	ADCSRA |= 1 << ADSC; // start conversion
     2ca:	ea e7       	ldi	r30, 0x7A	; 122
     2cc:	f0 e0       	ldi	r31, 0x00	; 0
     2ce:	80 81       	ld	r24, Z
     2d0:	80 64       	ori	r24, 0x40	; 64
     2d2:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC)) { // until finished conversion
     2d4:	80 81       	ld	r24, Z
     2d6:	86 fd       	sbrc	r24, 6
     2d8:	fd cf       	rjmp	.-6      	; 0x2d4 <readBrightness+0xa>
	}
	
	uint16_t digitalV = ADC;  // get ADC reading
     2da:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     2de:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	//char temp[20];
	//sprintf(temp, "%d", digitalV);
	//usart_transmit(temp);
	brightness = digitalV; 
     2e2:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <brightness+0x1>
     2e6:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <brightness>
     2ea:	08 95       	ret

000002ec <LightnessOutside>:
		LightnessOutside();
	}
}

void LightnessOutside() {
	if(brightness < 100){
     2ec:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <brightness>
     2f0:	90 91 17 04 	lds	r25, 0x0417	; 0x800417 <brightness+0x1>
     2f4:	84 36       	cpi	r24, 0x64	; 100
     2f6:	91 05       	cpc	r25, r1
     2f8:	2c f4       	brge	.+10     	; 0x304 <LightnessOutside+0x18>
		usart_transmit("Its night time\n");
     2fa:	8a e0       	ldi	r24, 0x0A	; 10
     2fc:	91 e0       	ldi	r25, 0x01	; 1
     2fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     302:	08 95       	ret
	}
	else if(brightness > 100 && brightness < 300){
     304:	9c 01       	movw	r18, r24
     306:	25 56       	subi	r18, 0x65	; 101
     308:	31 09       	sbc	r19, r1
     30a:	27 3c       	cpi	r18, 0xC7	; 199
     30c:	31 05       	cpc	r19, r1
     30e:	28 f4       	brcc	.+10     	; 0x31a <LightnessOutside+0x2e>
		usart_transmit("Its sunrise or dusk\n");
     310:	8a e1       	ldi	r24, 0x1A	; 26
     312:	91 e0       	ldi	r25, 0x01	; 1
     314:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     318:	08 95       	ret
	}
	else if(brightness > 300 && brightness < 700){
     31a:	8d 52       	subi	r24, 0x2D	; 45
     31c:	91 40       	sbci	r25, 0x01	; 1
     31e:	8f 38       	cpi	r24, 0x8F	; 143
     320:	91 40       	sbci	r25, 0x01	; 1
     322:	28 f4       	brcc	.+10     	; 0x32e <LightnessOutside+0x42>
		usart_transmit("Partially cloudy\n");
     324:	8f e2       	ldi	r24, 0x2F	; 47
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     32c:	08 95       	ret
	}
	else{
		usart_transmit("The sun it out and shinning\n");
     32e:	81 e4       	ldi	r24, 0x41	; 65
     330:	91 e0       	ldi	r25, 0x01	; 1
     332:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     336:	08 95       	ret

00000338 <displayBrightness>:
	//sprintf(temp, "%d", digitalV);
	//usart_transmit(temp);
	brightness = digitalV; 
}

void displayBrightness() {
     338:	0f 93       	push	r16
     33a:	1f 93       	push	r17
     33c:	cf 93       	push	r28
     33e:	df 93       	push	r29
     340:	cd b7       	in	r28, 0x3d	; 61
     342:	de b7       	in	r29, 0x3e	; 62
     344:	6e 97       	sbiw	r28, 0x1e	; 30
     346:	0f b6       	in	r0, 0x3f	; 63
     348:	f8 94       	cli
     34a:	de bf       	out	0x3e, r29	; 62
     34c:	0f be       	out	0x3f, r0	; 63
     34e:	cd bf       	out	0x3d, r28	; 61
	if (BRenbale == 1) {
     350:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <BRenbale>
     354:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <BRenbale+0x1>
     358:	01 97       	sbiw	r24, 0x01	; 1
     35a:	e1 f4       	brne	.+56     	; 0x394 <displayBrightness+0x5c>
		char outstr[30];
		sprintf(outstr, "brightness = %d\n", brightness);
     35c:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <brightness+0x1>
     360:	8f 93       	push	r24
     362:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <brightness>
     366:	8f 93       	push	r24
     368:	8e e5       	ldi	r24, 0x5E	; 94
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	9f 93       	push	r25
     36e:	8f 93       	push	r24
     370:	8e 01       	movw	r16, r28
     372:	0f 5f       	subi	r16, 0xFF	; 255
     374:	1f 4f       	sbci	r17, 0xFF	; 255
     376:	1f 93       	push	r17
     378:	0f 93       	push	r16
     37a:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
		usart_transmit(outstr);
     37e:	c8 01       	movw	r24, r16
     380:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
		LightnessOutside();
     384:	0e 94 76 01 	call	0x2ec	; 0x2ec <LightnessOutside>
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	0f 90       	pop	r0
     392:	0f 90       	pop	r0
	}
}
     394:	6e 96       	adiw	r28, 0x1e	; 30
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	df 91       	pop	r29
     3a2:	cf 91       	pop	r28
     3a4:	1f 91       	pop	r17
     3a6:	0f 91       	pop	r16
     3a8:	08 95       	ret

000003aa <displayTemp>:

void displayTemp(){
	if (DHTresult[2]< 0) {
		usart_transmit("BRRRR its very cold out\n");
	}
	else if(DHTresult[2]> 0 && DHTresult[2] < 11){
     3aa:	80 91 1e 04 	lds	r24, 0x041E	; 0x80041e <DHTresult+0x2>
     3ae:	9f ef       	ldi	r25, 0xFF	; 255
     3b0:	98 0f       	add	r25, r24
     3b2:	9a 30       	cpi	r25, 0x0A	; 10
     3b4:	28 f4       	brcc	.+10     	; 0x3c0 <displayTemp+0x16>
		usart_transmit("A light jacket would be advised\n");
     3b6:	8f e6       	ldi	r24, 0x6F	; 111
     3b8:	91 e0       	ldi	r25, 0x01	; 1
     3ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     3be:	08 95       	ret
	}
	else if(DHTresult[2] > 11 && DHTresult[2] < 20){
     3c0:	94 ef       	ldi	r25, 0xF4	; 244
     3c2:	98 0f       	add	r25, r24
     3c4:	98 30       	cpi	r25, 0x08	; 8
     3c6:	28 f4       	brcc	.+10     	; 0x3d2 <displayTemp+0x28>
		usart_transmit("no need for a jacket enjoy the weather\n");
     3c8:	80 e9       	ldi	r24, 0x90	; 144
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     3d0:	08 95       	ret
	}
	else if (DHTresult[2]> 20 && DHTresult[2] < 30){
     3d2:	85 51       	subi	r24, 0x15	; 21
     3d4:	89 30       	cpi	r24, 0x09	; 9
     3d6:	28 f4       	brcc	.+10     	; 0x3e2 <displayTemp+0x38>
		usart_transmit("shorts and t-shirt weather\n");
     3d8:	88 eb       	ldi	r24, 0xB8	; 184
     3da:	91 e0       	ldi	r25, 0x01	; 1
     3dc:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     3e0:	08 95       	ret
	} else {
		usart_transmit("HOT, stay hydrated\n");
     3e2:	84 ed       	ldi	r24, 0xD4	; 212
     3e4:	91 e0       	ldi	r25, 0x01	; 1
     3e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     3ea:	08 95       	ret

000003ec <displayDHT>:
	else{
		usart_transmit("The sun it out and shinning\n");
	}
}

void displayDHT(char outstr[]) {
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	d8 2f       	mov	r29, r24
     3f2:	c9 2f       	mov	r28, r25
	// check if result is valid
	if (DHTresult[4] != (DHTresult[0] + DHTresult[1] + DHTresult[2] + DHTresult[3])) {
     3f4:	ec e1       	ldi	r30, 0x1C	; 28
     3f6:	f4 e0       	ldi	r31, 0x04	; 4
     3f8:	40 81       	ld	r20, Z
     3fa:	51 81       	ldd	r21, Z+1	; 0x01
     3fc:	85 2f       	mov	r24, r21
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	24 81       	ldd	r18, Z+4	; 0x04
     402:	30 e0       	ldi	r19, 0x00	; 0
     404:	84 0f       	add	r24, r20
     406:	91 1d       	adc	r25, r1
     408:	62 81       	ldd	r22, Z+2	; 0x02
     40a:	86 0f       	add	r24, r22
     40c:	91 1d       	adc	r25, r1
     40e:	63 81       	ldd	r22, Z+3	; 0x03
     410:	86 0f       	add	r24, r22
     412:	91 1d       	adc	r25, r1
     414:	28 17       	cp	r18, r24
     416:	39 07       	cpc	r19, r25
     418:	29 f0       	breq	.+10     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
		usart_transmit("INTERFERENCE WITH DHT READING\n");
     41a:	88 ee       	ldi	r24, 0xE8	; 232
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     422:	42 c0       	rjmp	.+132    	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
	} else {
		if (RHenable == 1) {
     424:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <RHenable>
     428:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <RHenable+0x1>
     42c:	01 97       	sbiw	r24, 0x01	; 1
     42e:	c1 f4       	brne	.+48     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
			sprintf(outstr, "RH: %d.%d%% \n ", DHTresult[0], DHTresult[1]);
     430:	1f 92       	push	r1
     432:	5f 93       	push	r21
     434:	1f 92       	push	r1
     436:	4f 93       	push	r20
     438:	87 e0       	ldi	r24, 0x07	; 7
     43a:	92 e0       	ldi	r25, 0x02	; 2
     43c:	9f 93       	push	r25
     43e:	8f 93       	push	r24
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
			usart_transmit(outstr);
     448:	8d 2f       	mov	r24, r29
     44a:	9c 2f       	mov	r25, r28
     44c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     450:	8d b7       	in	r24, 0x3d	; 61
     452:	9e b7       	in	r25, 0x3e	; 62
     454:	08 96       	adiw	r24, 0x08	; 8
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	9e bf       	out	0x3e, r25	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	8d bf       	out	0x3d, r24	; 61
		} 
		if (TEMPenable == 1) {
     460:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <TEMPenable>
     464:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <TEMPenable+0x1>
     468:	01 97       	sbiw	r24, 0x01	; 1
     46a:	f1 f4       	brne	.+60     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
			sprintf(outstr, "Temp(Celsius): %d.%d \n", DHTresult[2], DHTresult[3]);
     46c:	ec e1       	ldi	r30, 0x1C	; 28
     46e:	f4 e0       	ldi	r31, 0x04	; 4
     470:	83 81       	ldd	r24, Z+3	; 0x03
     472:	1f 92       	push	r1
     474:	8f 93       	push	r24
     476:	82 81       	ldd	r24, Z+2	; 0x02
     478:	1f 92       	push	r1
     47a:	8f 93       	push	r24
     47c:	86 e1       	ldi	r24, 0x16	; 22
     47e:	92 e0       	ldi	r25, 0x02	; 2
     480:	9f 93       	push	r25
     482:	8f 93       	push	r24
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
			usart_transmit(outstr);
     48c:	8d 2f       	mov	r24, r29
     48e:	9c 2f       	mov	r25, r28
     490:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			displayTemp();
     494:	0e 94 d5 01 	call	0x3aa	; 0x3aa <displayTemp>
     498:	8d b7       	in	r24, 0x3d	; 61
     49a:	9e b7       	in	r25, 0x3e	; 62
     49c:	08 96       	adiw	r24, 0x08	; 8
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	f8 94       	cli
     4a2:	9e bf       	out	0x3e, r25	; 62
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	8d bf       	out	0x3d, r24	; 61
		}
	}
}
     4a8:	df 91       	pop	r29
     4aa:	cf 91       	pop	r28
     4ac:	08 95       	ret

000004ae <delayOverall>:

void delayOverall () {
	int s = 0;
	int m = 0;
	int h = 0;
	s = sec;
     4ae:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sec>
     4b2:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <sec+0x1>
	m = minute;
     4b6:	40 91 23 04 	lds	r20, 0x0423	; 0x800423 <minute>
     4ba:	50 91 24 04 	lds	r21, 0x0424	; 0x800424 <minute+0x1>
	h = hour;
     4be:	60 91 21 04 	lds	r22, 0x0421	; 0x800421 <hour>
     4c2:	70 91 22 04 	lds	r23, 0x0422	; 0x800422 <hour+0x1>
	//usart_transmit("here1\n");
	// sec
	while (s > 0) {
     4c6:	18 16       	cp	r1, r24
     4c8:	19 06       	cpc	r1, r25
     4ca:	bc f4       	brge	.+46     	; 0x4fa <delayOverall+0x4c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4cc:	2f ef       	ldi	r18, 0xFF	; 255
     4ce:	33 ed       	ldi	r19, 0xD3	; 211
     4d0:	e0 e3       	ldi	r30, 0x30	; 48
     4d2:	21 50       	subi	r18, 0x01	; 1
     4d4:	30 40       	sbci	r19, 0x00	; 0
     4d6:	e0 40       	sbci	r30, 0x00	; 0
     4d8:	e1 f7       	brne	.-8      	; 0x4d2 <delayOverall+0x24>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <delayOverall+0x2e>
     4dc:	00 00       	nop
		_delay_ms(1000);
		s--;
     4de:	01 97       	sbiw	r24, 0x01	; 1
		if (changed) {
     4e0:	20 91 1a 04 	lds	r18, 0x041A	; 0x80041a <changed>
     4e4:	30 91 1b 04 	lds	r19, 0x041B	; 0x80041b <changed+0x1>
     4e8:	23 2b       	or	r18, r19
     4ea:	29 f0       	breq	.+10     	; 0x4f6 <delayOverall+0x48>
			changed = 0;
     4ec:	10 92 1b 04 	sts	0x041B, r1	; 0x80041b <changed+0x1>
     4f0:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <changed>
			return;
     4f4:	08 95       	ret
	s = sec;
	m = minute;
	h = hour;
	//usart_transmit("here1\n");
	// sec
	while (s > 0) {
     4f6:	00 97       	sbiw	r24, 0x00	; 0
     4f8:	49 f7       	brne	.-46     	; 0x4cc <delayOverall+0x1e>
			return;
		}
	}
	//usart_transmit("here2\n");
	// min
	while (m > 0) {
     4fa:	14 16       	cp	r1, r20
     4fc:	15 06       	cpc	r1, r21
     4fe:	d4 f0       	brlt	.+52     	; 0x534 <delayOverall+0x86>
     500:	1c c0       	rjmp	.+56     	; 0x53a <delayOverall+0x8c>
     502:	2f ef       	ldi	r18, 0xFF	; 255
     504:	33 ed       	ldi	r19, 0xD3	; 211
     506:	e0 e3       	ldi	r30, 0x30	; 48
     508:	21 50       	subi	r18, 0x01	; 1
     50a:	30 40       	sbci	r19, 0x00	; 0
     50c:	e0 40       	sbci	r30, 0x00	; 0
     50e:	e1 f7       	brne	.-8      	; 0x508 <delayOverall+0x5a>
     510:	00 c0       	rjmp	.+0      	; 0x512 <delayOverall+0x64>
     512:	00 00       	nop
		for (int i = 0; i < 60; i++) {
			_delay_ms(1000);
			if (changed) {
     514:	20 91 1a 04 	lds	r18, 0x041A	; 0x80041a <changed>
     518:	30 91 1b 04 	lds	r19, 0x041B	; 0x80041b <changed+0x1>
     51c:	23 2b       	or	r18, r19
     51e:	29 f0       	breq	.+10     	; 0x52a <delayOverall+0x7c>
				changed = 0;
     520:	10 92 1b 04 	sts	0x041B, r1	; 0x80041b <changed+0x1>
     524:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <changed>
				return;
     528:	08 95       	ret
     52a:	01 97       	sbiw	r24, 0x01	; 1
		}
	}
	//usart_transmit("here2\n");
	// min
	while (m > 0) {
		for (int i = 0; i < 60; i++) {
     52c:	51 f7       	brne	.-44     	; 0x502 <delayOverall+0x54>
			if (changed) {
				changed = 0;
				return;
			}
		}
		m--;
     52e:	41 50       	subi	r20, 0x01	; 1
     530:	51 09       	sbc	r21, r1
			return;
		}
	}
	//usart_transmit("here2\n");
	// min
	while (m > 0) {
     532:	19 f0       	breq	.+6      	; 0x53a <delayOverall+0x8c>
	} else {
		usart_transmit("HOT, stay hydrated\n");
	}
}

void delayOverall () {
     534:	8c e3       	ldi	r24, 0x3C	; 60
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	e4 cf       	rjmp	.-56     	; 0x502 <delayOverall+0x54>
		}
		m--;
	}
	//usart_transmit("here3\n");
	// hour 
	while (h > 0) {
     53a:	16 16       	cp	r1, r22
     53c:	17 06       	cpc	r1, r23
     53e:	d4 f0       	brlt	.+52     	; 0x574 <delayOverall+0xc6>
     540:	08 95       	ret
     542:	2f ef       	ldi	r18, 0xFF	; 255
     544:	33 ed       	ldi	r19, 0xD3	; 211
     546:	40 e3       	ldi	r20, 0x30	; 48
     548:	21 50       	subi	r18, 0x01	; 1
     54a:	30 40       	sbci	r19, 0x00	; 0
     54c:	40 40       	sbci	r20, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <delayOverall+0x9a>
     550:	00 c0       	rjmp	.+0      	; 0x552 <delayOverall+0xa4>
     552:	00 00       	nop
		for (int i = 0; i < 3600; i++) {
			_delay_ms(1000);
			if (changed) {
     554:	20 91 1a 04 	lds	r18, 0x041A	; 0x80041a <changed>
     558:	30 91 1b 04 	lds	r19, 0x041B	; 0x80041b <changed+0x1>
     55c:	23 2b       	or	r18, r19
     55e:	29 f0       	breq	.+10     	; 0x56a <delayOverall+0xbc>
				changed = 0;
     560:	10 92 1b 04 	sts	0x041B, r1	; 0x80041b <changed+0x1>
     564:	10 92 1a 04 	sts	0x041A, r1	; 0x80041a <changed>
				return;
     568:	08 95       	ret
     56a:	01 97       	sbiw	r24, 0x01	; 1
		m--;
	}
	//usart_transmit("here3\n");
	// hour 
	while (h > 0) {
		for (int i = 0; i < 3600; i++) {
     56c:	51 f7       	brne	.-44     	; 0x542 <delayOverall+0x94>
			if (changed) {
				changed = 0;
				return;
			}
		}
		h--;
     56e:	61 50       	subi	r22, 0x01	; 1
     570:	71 09       	sbc	r23, r1
		}
		m--;
	}
	//usart_transmit("here3\n");
	// hour 
	while (h > 0) {
     572:	19 f0       	breq	.+6      	; 0x57a <delayOverall+0xcc>
	} else {
		usart_transmit("HOT, stay hydrated\n");
	}
}

void delayOverall () {
     574:	80 e1       	ldi	r24, 0x10	; 16
     576:	9e e0       	ldi	r25, 0x0E	; 14
     578:	e4 cf       	rjmp	.-56     	; 0x542 <delayOverall+0x94>
     57a:	08 95       	ret

0000057c <main>:
	}
} 

		
int main(void)
{	
     57c:	cf 93       	push	r28
     57e:	df 93       	push	r29
     580:	cd b7       	in	r28, 0x3d	; 61
     582:	de b7       	in	r29, 0x3e	; 62
     584:	c4 56       	subi	r28, 0x64	; 100
     586:	d1 09       	sbc	r29, r1
     588:	0f b6       	in	r0, 0x3f	; 63
     58a:	f8 94       	cli
     58c:	de bf       	out	0x3e, r29	; 62
     58e:	0f be       	out	0x3f, r0	; 63
     590:	cd bf       	out	0x3d, r28	; 61
	// holding string output
	char outstr[100];
	// initialize usart
	usart_init();
     592:	0e 94 da 00 	call	0x1b4	; 0x1b4 <usart_init>
	// initialize ADC
	ADC_init();
     596:	0e 94 5e 01 	call	0x2bc	; 0x2bc <ADC_init>
	// PC3 output buffer set to 0
	PORTC &= ~(1<<3);
     59a:	43 98       	cbi	0x08, 3	; 8
	// PD2 to input PBS
	DDRD = 0;
     59c:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0x04;
     59e:	84 e0       	ldi	r24, 0x04	; 4
     5a0:	8b b9       	out	0x0b, r24	; 11
	// setup interrupt
	EICRA = 2; // falling edge on INT0
     5a2:	82 e0       	ldi	r24, 0x02	; 2
     5a4:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = 1;
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	8d bb       	out	0x1d, r24	; 29
	sei();
     5ac:	78 94       	sei
	usart_transmit("Default sampling time: 5sec.\n");
     5ae:	8d e2       	ldi	r24, 0x2D	; 45
     5b0:	92 e0       	ldi	r25, 0x02	; 2
     5b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
	usart_transmit("All readings enabled by default.\n");
     5b6:	8b e4       	ldi	r24, 0x4B	; 75
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
	sprintf(outstr, "Interval set: %d Hour, %d Minute, %d Second.\n ", hour, minute, sec);
     5be:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <sec+0x1>
     5c2:	8f 93       	push	r24
     5c4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sec>
     5c8:	8f 93       	push	r24
     5ca:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <minute+0x1>
     5ce:	8f 93       	push	r24
     5d0:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <minute>
     5d4:	8f 93       	push	r24
     5d6:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <hour+0x1>
     5da:	8f 93       	push	r24
     5dc:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <hour>
     5e0:	8f 93       	push	r24
     5e2:	8d e6       	ldi	r24, 0x6D	; 109
     5e4:	92 e0       	ldi	r25, 0x02	; 2
     5e6:	9f 93       	push	r25
     5e8:	8f 93       	push	r24
     5ea:	8e 01       	movw	r16, r28
     5ec:	0f 5f       	subi	r16, 0xFF	; 255
     5ee:	1f 4f       	sbci	r17, 0xFF	; 255
     5f0:	1f 93       	push	r17
     5f2:	0f 93       	push	r16
     5f4:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
	usart_transmit(outstr);
     5f8:	c8 01       	movw	r24, r16
     5fa:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     5fe:	0f b6       	in	r0, 0x3f	; 63
     600:	f8 94       	cli
     602:	de bf       	out	0x3e, r29	; 62
     604:	0f be       	out	0x3f, r0	; 63
     606:	cd bf       	out	0x3d, r28	; 61
	while(1) {
		if (TEMPenable == 1 || RHenable == 1) {
     608:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <TEMPenable>
     60c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <TEMPenable+0x1>
     610:	01 97       	sbiw	r24, 0x01	; 1
     612:	31 f0       	breq	.+12     	; 0x620 <main+0xa4>
     614:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <RHenable>
     618:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <RHenable+0x1>
     61c:	01 97       	sbiw	r24, 0x01	; 1
     61e:	31 f4       	brne	.+12     	; 0x62c <main+0xb0>
			readDHT();
     620:	0e 94 19 01 	call	0x232	; 0x232 <readDHT>
			displayDHT(outstr);
     624:	ce 01       	movw	r24, r28
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	0e 94 f6 01 	call	0x3ec	; 0x3ec <displayDHT>
		}
		if (BRenbale == 1) {
     62c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <BRenbale>
     630:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <BRenbale+0x1>
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	21 f4       	brne	.+8      	; 0x640 <main+0xc4>
			readBrightness();
     638:	0e 94 65 01 	call	0x2ca	; 0x2ca <readBrightness>
			displayBrightness();
     63c:	0e 94 9c 01 	call	0x338	; 0x338 <displayBrightness>
		}
		delayOverall();
     640:	0e 94 57 02 	call	0x4ae	; 0x4ae <delayOverall>
	}
     644:	e1 cf       	rjmp	.-62     	; 0x608 <main+0x8c>

00000646 <debounce>:
		h--;
	}
	//usart_transmit("here4\n");
}

void debounce() {
     646:	89 e0       	ldi	r24, 0x09	; 9
     648:	90 e0       	ldi	r25, 0x00	; 0
	int counts = 0;
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
	for (int i = 0; i < 9; i++) {
		if ((PIND&(1<<PIND2)) == 0) {
     64e:	4a 99       	sbic	0x09, 2	; 9
     650:	02 c0       	rjmp	.+4      	; 0x656 <debounce+0x10>
			counts++;
     652:	2f 5f       	subi	r18, 0xFF	; 255
     654:	3f 4f       	sbci	r19, 0xFF	; 255
     656:	ef e3       	ldi	r30, 0x3F	; 63
     658:	fc e9       	ldi	r31, 0x9C	; 156
     65a:	31 97       	sbiw	r30, 0x01	; 1
     65c:	f1 f7       	brne	.-4      	; 0x65a <debounce+0x14>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <debounce+0x1a>
     660:	00 00       	nop
     662:	01 97       	sbiw	r24, 0x01	; 1
	//usart_transmit("here4\n");
}

void debounce() {
	int counts = 0;
	for (int i = 0; i < 9; i++) {
     664:	a1 f7       	brne	.-24     	; 0x64e <debounce+0x8>
		if ((PIND&(1<<PIND2)) == 0) {
			counts++;
		}
		_delay_ms(10.0);
	}
	if (counts >= 5) {
     666:	25 30       	cpi	r18, 0x05	; 5
     668:	31 05       	cpc	r19, r1
     66a:	3c f0       	brlt	.+14     	; 0x67a <debounce+0x34>
		pressed = 1;
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	90 93 19 04 	sts	0x0419, r25	; 0x800419 <pressed+0x1>
     674:	80 93 18 04 	sts	0x0418, r24	; 0x800418 <pressed>
     678:	08 95       	ret
	} else {
		pressed = 0;
     67a:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <pressed+0x1>
     67e:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <pressed>
     682:	08 95       	ret

00000684 <__vector_1>:
int RHenable = 1;
int TEMPenable = 1;
int BRenbale = 1;
int ReadingEnables = 111;

ISR (INT0_vect) {
     684:	1f 92       	push	r1
     686:	0f 92       	push	r0
     688:	0f b6       	in	r0, 0x3f	; 63
     68a:	0f 92       	push	r0
     68c:	11 24       	eor	r1, r1
     68e:	cf 92       	push	r12
     690:	df 92       	push	r13
     692:	ef 92       	push	r14
     694:	ff 92       	push	r15
     696:	0f 93       	push	r16
     698:	1f 93       	push	r17
     69a:	2f 93       	push	r18
     69c:	3f 93       	push	r19
     69e:	4f 93       	push	r20
     6a0:	5f 93       	push	r21
     6a2:	6f 93       	push	r22
     6a4:	7f 93       	push	r23
     6a6:	8f 93       	push	r24
     6a8:	9f 93       	push	r25
     6aa:	af 93       	push	r26
     6ac:	bf 93       	push	r27
     6ae:	ef 93       	push	r30
     6b0:	ff 93       	push	r31
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	cd b7       	in	r28, 0x3d	; 61
     6b8:	de b7       	in	r29, 0x3e	; 62
     6ba:	c6 56       	subi	r28, 0x66	; 102
     6bc:	d1 09       	sbc	r29, r1
     6be:	de bf       	out	0x3e, r29	; 62
     6c0:	cd bf       	out	0x3d, r28	; 61
	//usart_transmit("something");
	debounce();
     6c2:	0e 94 23 03 	call	0x646	; 0x646 <debounce>
	//usart_transmit("something");
	if (pressed) {
     6c6:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <pressed>
     6ca:	90 91 19 04 	lds	r25, 0x0419	; 0x800419 <pressed+0x1>
     6ce:	89 2b       	or	r24, r25
     6d0:	09 f4       	brne	.+2      	; 0x6d4 <__vector_1+0x50>
     6d2:	59 c2       	rjmp	.+1202   	; 0xb86 <__stack+0x287>
		int timebuffer = 0;
     6d4:	a7 96       	adiw	r28, 0x27	; 39
     6d6:	1f ae       	std	Y+63, r1	; 0x3f
     6d8:	1e ae       	std	Y+62, r1	; 0x3e
     6da:	a7 97       	sbiw	r28, 0x27	; 39
		// reset 
		char c;
		char echo[100];
		int i;
		int valid = 1;
		usart_transmit("Please enter command for configs: (hour,minute,second,3bits command for readings(example: 111)+SPACEBAR)\n");
     6dc:	8c e9       	ldi	r24, 0x9C	; 156
     6de:	92 e0       	ldi	r25, 0x02	; 2
     6e0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     6e4:	0f 2e       	mov	r0, r31
     6e6:	f5 e2       	ldi	r31, 0x25	; 37
     6e8:	ef 2e       	mov	r14, r31
     6ea:	f4 e0       	ldi	r31, 0x04	; 4
     6ec:	ff 2e       	mov	r15, r31
     6ee:	f0 2d       	mov	r31, r0
		for (i=0;i<24;i++){
     6f0:	00 e0       	ldi	r16, 0x00	; 0
     6f2:	10 e0       	ldi	r17, 0x00	; 0
			c = usart_receives(); // Get character
     6f4:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <usart_receives>
			command[i] = c;
     6f8:	f7 01       	movw	r30, r14
     6fa:	81 93       	st	Z+, r24
     6fc:	7f 01       	movw	r14, r30
			if (c == ' ') {
     6fe:	80 32       	cpi	r24, 0x20	; 32
     700:	69 f4       	brne	.+26     	; 0x71c <__vector_1+0x98>
				break; // space bar indicate the end of a command
			}
		}
		command[i] = '\0';
     702:	f8 01       	movw	r30, r16
     704:	eb 5d       	subi	r30, 0xDB	; 219
     706:	fb 4f       	sbci	r31, 0xFB	; 251
     708:	10 82       	st	Z, r1
		char *pch;  // points to the start of the next string fragment  
		int counter = 0;
		pch = strtok(command, ",");
     70a:	66 e0       	ldi	r22, 0x06	; 6
     70c:	73 e0       	ldi	r23, 0x03	; 3
     70e:	85 e2       	ldi	r24, 0x25	; 37
     710:	94 e0       	ldi	r25, 0x04	; 4
     712:	0e 94 a2 0a 	call	0x1544	; 0x1544 <strtok>
		while (pch != NULL) { // split the M command to get sampling times and intervals
     716:	00 97       	sbiw	r24, 0x00	; 0
     718:	21 f4       	brne	.+8      	; 0x722 <__vector_1+0x9e>
     71a:	2c c2       	rjmp	.+1112   	; 0xb74 <__stack+0x275>
		char c;
		char echo[100];
		int i;
		int valid = 1;
		usart_transmit("Please enter command for configs: (hour,minute,second,3bits command for readings(example: 111)+SPACEBAR)\n");
		for (i=0;i<24;i++){
     71c:	0f 5f       	subi	r16, 0xFF	; 255
     71e:	1f 4f       	sbci	r17, 0xFF	; 255
     720:	e9 cf       	rjmp	.-46     	; 0x6f4 <__vector_1+0x70>
		}
		command[i] = '\0';
		char *pch;  // points to the start of the next string fragment  
		int counter = 0;
		pch = strtok(command, ",");
		while (pch != NULL) { // split the M command to get sampling times and intervals
     722:	00 e0       	ldi	r16, 0x00	; 0
     724:	10 e0       	ldi	r17, 0x00	; 0
					valid = 0; 
					break;
				} 
				sec = timebuffer;	
			} else if (counter == 3) { 
				sscanf(pch, "%d", &timebuffer); 
     726:	7e 01       	movw	r14, r28
     728:	f5 e6       	ldi	r31, 0x65	; 101
     72a:	ef 0e       	add	r14, r31
     72c:	f1 1c       	adc	r15, r1
     72e:	0f 2e       	mov	r0, r31
     730:	f8 e0       	ldi	r31, 0x08	; 8
     732:	cf 2e       	mov	r12, r31
     734:	f3 e0       	ldi	r31, 0x03	; 3
     736:	df 2e       	mov	r13, r31
     738:	f0 2d       	mov	r31, r0
		command[i] = '\0';
		char *pch;  // points to the start of the next string fragment  
		int counter = 0;
		pch = strtok(command, ",");
		while (pch != NULL) { // split the M command to get sampling times and intervals
			if (counter == 0) {
     73a:	01 15       	cp	r16, r1
     73c:	11 05       	cpc	r17, r1
     73e:	f1 f4       	brne	.+60     	; 0x77c <__vector_1+0xf8>
				sscanf(pch, "%d", &timebuffer);
     740:	ff 92       	push	r15
     742:	ef 92       	push	r14
     744:	df 92       	push	r13
     746:	cf 92       	push	r12
     748:	9f 93       	push	r25
     74a:	8f 93       	push	r24
     74c:	0e 94 37 0b 	call	0x166e	; 0x166e <sscanf>
				if (timebuffer >= 48 || timebuffer < 0) {
     750:	f7 01       	movw	r30, r14
     752:	80 81       	ld	r24, Z
     754:	91 81       	ldd	r25, Z+1	; 0x01
     756:	0f 90       	pop	r0
     758:	0f 90       	pop	r0
     75a:	0f 90       	pop	r0
     75c:	0f 90       	pop	r0
     75e:	0f 90       	pop	r0
     760:	0f 90       	pop	r0
     762:	80 33       	cpi	r24, 0x30	; 48
     764:	91 05       	cpc	r25, r1
     766:	28 f0       	brcs	.+10     	; 0x772 <__vector_1+0xee>
					usart_transmit("Invalid time settings.\n");
     768:	8b e0       	ldi	r24, 0x0B	; 11
     76a:	93 e0       	ldi	r25, 0x03	; 3
     76c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
					valid = 0;
					break;
     770:	cc c1       	rjmp	.+920    	; 0xb0a <__stack+0x20b>
				} 
					hour = timebuffer;
     772:	90 93 22 04 	sts	0x0422, r25	; 0x800422 <hour+0x1>
     776:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <hour>
     77a:	6e c0       	rjmp	.+220    	; 0x858 <__DATA_REGION_LENGTH__+0x58>
			} else if (counter == 1) { 
     77c:	01 30       	cpi	r16, 0x01	; 1
     77e:	11 05       	cpc	r17, r1
     780:	f1 f4       	brne	.+60     	; 0x7be <__vector_1+0x13a>
				sscanf(pch, "%d", &timebuffer);
     782:	ff 92       	push	r15
     784:	ef 92       	push	r14
     786:	df 92       	push	r13
     788:	cf 92       	push	r12
     78a:	9f 93       	push	r25
     78c:	8f 93       	push	r24
     78e:	0e 94 37 0b 	call	0x166e	; 0x166e <sscanf>
				if (timebuffer >=60 || timebuffer < 0) {
     792:	f7 01       	movw	r30, r14
     794:	80 81       	ld	r24, Z
     796:	91 81       	ldd	r25, Z+1	; 0x01
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	0f 90       	pop	r0
     7a0:	0f 90       	pop	r0
     7a2:	0f 90       	pop	r0
     7a4:	8c 33       	cpi	r24, 0x3C	; 60
     7a6:	91 05       	cpc	r25, r1
     7a8:	28 f0       	brcs	.+10     	; 0x7b4 <__vector_1+0x130>
					usart_transmit("Invalid time settings.\n");
     7aa:	8b e0       	ldi	r24, 0x0B	; 11
     7ac:	93 e0       	ldi	r25, 0x03	; 3
     7ae:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
					valid = 0;
					break;
     7b2:	ab c1       	rjmp	.+854    	; 0xb0a <__stack+0x20b>
				} 
				minute = timebuffer;
     7b4:	90 93 24 04 	sts	0x0424, r25	; 0x800424 <minute+0x1>
     7b8:	80 93 23 04 	sts	0x0423, r24	; 0x800423 <minute>
     7bc:	4d c0       	rjmp	.+154    	; 0x858 <__DATA_REGION_LENGTH__+0x58>
			} else if (counter == 2) { 
     7be:	02 30       	cpi	r16, 0x02	; 2
     7c0:	11 05       	cpc	r17, r1
     7c2:	69 f5       	brne	.+90     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
				sscanf(pch, "%d", &timebuffer); 
     7c4:	ff 92       	push	r15
     7c6:	ef 92       	push	r14
     7c8:	df 92       	push	r13
     7ca:	cf 92       	push	r12
     7cc:	9f 93       	push	r25
     7ce:	8f 93       	push	r24
     7d0:	0e 94 37 0b 	call	0x166e	; 0x166e <sscanf>
				if ((timebuffer <= 1 && hour == 0 && minute == 0) || timebuffer < 0 || timebuffer >= 60) { 
     7d4:	f7 01       	movw	r30, r14
     7d6:	80 81       	ld	r24, Z
     7d8:	91 81       	ldd	r25, Z+1	; 0x01
     7da:	0f 90       	pop	r0
     7dc:	0f 90       	pop	r0
     7de:	0f 90       	pop	r0
     7e0:	0f 90       	pop	r0
     7e2:	0f 90       	pop	r0
     7e4:	0f 90       	pop	r0
     7e6:	82 30       	cpi	r24, 0x02	; 2
     7e8:	91 05       	cpc	r25, r1
     7ea:	64 f4       	brge	.+24     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7ec:	20 91 21 04 	lds	r18, 0x0421	; 0x800421 <hour>
     7f0:	30 91 22 04 	lds	r19, 0x0422	; 0x800422 <hour+0x1>
     7f4:	23 2b       	or	r18, r19
     7f6:	31 f4       	brne	.+12     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7f8:	20 91 23 04 	lds	r18, 0x0423	; 0x800423 <minute>
     7fc:	30 91 24 04 	lds	r19, 0x0424	; 0x800424 <minute+0x1>
     800:	23 2b       	or	r18, r19
     802:	19 f0       	breq	.+6      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     804:	8c 33       	cpi	r24, 0x3C	; 60
     806:	91 05       	cpc	r25, r1
     808:	28 f0       	brcs	.+10     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
					usart_transmit("Invalid time settings.\n"); 
     80a:	8b e0       	ldi	r24, 0x0B	; 11
     80c:	93 e0       	ldi	r25, 0x03	; 3
     80e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
					valid = 0; 
					break;
     812:	7b c1       	rjmp	.+758    	; 0xb0a <__stack+0x20b>
				} 
				sec = timebuffer;	
     814:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <sec+0x1>
     818:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <sec>
     81c:	1d c0       	rjmp	.+58     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
			} else if (counter == 3) { 
     81e:	03 30       	cpi	r16, 0x03	; 3
     820:	11 05       	cpc	r17, r1
     822:	b1 f4       	brne	.+44     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
				sscanf(pch, "%d", &timebuffer); 
     824:	ff 92       	push	r15
     826:	ef 92       	push	r14
     828:	df 92       	push	r13
     82a:	cf 92       	push	r12
     82c:	9f 93       	push	r25
     82e:	8f 93       	push	r24
     830:	0e 94 37 0b 	call	0x166e	; 0x166e <sscanf>
				if (valid) {
					ReadingEnables = timebuffer;
     834:	f7 01       	movw	r30, r14
     836:	80 81       	ld	r24, Z
     838:	91 81       	ldd	r25, Z+1	; 0x01
     83a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     83e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     842:	0f 90       	pop	r0
     844:	0f 90       	pop	r0
     846:	0f 90       	pop	r0
     848:	0f 90       	pop	r0
     84a:	0f 90       	pop	r0
     84c:	0f 90       	pop	r0
     84e:	04 c0       	rjmp	.+8      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
				}
			} else {
				usart_transmit("Something went wrong.\n");
     850:	83 e2       	ldi	r24, 0x23	; 35
     852:	93 e0       	ldi	r25, 0x03	; 3
     854:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			}
			counter ++;
     858:	0f 5f       	subi	r16, 0xFF	; 255
     85a:	1f 4f       	sbci	r17, 0xFF	; 255
			pch = strtok (NULL, ","); // memories the modifed string so NULL for no new input
     85c:	66 e0       	ldi	r22, 0x06	; 6
     85e:	73 e0       	ldi	r23, 0x03	; 3
     860:	80 e0       	ldi	r24, 0x00	; 0
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	0e 94 a2 0a 	call	0x1544	; 0x1544 <strtok>
		}
		command[i] = '\0';
		char *pch;  // points to the start of the next string fragment  
		int counter = 0;
		pch = strtok(command, ",");
		while (pch != NULL) { // split the M command to get sampling times and intervals
     868:	00 97       	sbiw	r24, 0x00	; 0
     86a:	09 f0       	breq	.+2      	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
     86c:	66 cf       	rjmp	.-308    	; 0x73a <__vector_1+0xb6>
     86e:	82 c1       	rjmp	.+772    	; 0xb74 <__stack+0x275>
		}
		if (valid) { // valid time settings
			int copyEn = ReadingEnables;
			// modify enables
			if (ReadingEnables == 0) {
				usart_transmit("Warning: No readings enabled.\n");
     870:	8a e3       	ldi	r24, 0x3A	; 58
     872:	93 e0       	ldi	r25, 0x03	; 3
     874:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			} 
			if ((ReadingEnables / 100) != 0) {
     878:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     87c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     880:	8d 59       	subi	r24, 0x9D	; 157
     882:	9f 4f       	sbci	r25, 0xFF	; 255
     884:	87 3c       	cpi	r24, 0xC7	; 199
     886:	91 05       	cpc	r25, r1
     888:	b8 f0       	brcs	.+46     	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
				RHenable = 1;
     88a:	81 e0       	ldi	r24, 0x01	; 1
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <RHenable+0x1>
     892:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <RHenable>
				usart_transmit("Humidity readings enabled.\n");
     896:	89 e5       	ldi	r24, 0x59	; 89
     898:	93 e0       	ldi	r25, 0x03	; 3
     89a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 100;
     89e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8a6:	64 e6       	ldi	r22, 0x64	; 100
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     8ae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     8b6:	14 c0       	rjmp	.+40     	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
			} else {
				RHenable = 0;
     8b8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <RHenable+0x1>
     8bc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <RHenable>
				usart_transmit("Humidity readings disabled.\n");
     8c0:	85 e7       	ldi	r24, 0x75	; 117
     8c2:	93 e0       	ldi	r25, 0x03	; 3
     8c4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 100;
     8c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8cc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8d0:	64 e6       	ldi	r22, 0x64	; 100
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     8d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8dc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			if ((ReadingEnables / 10) != 0) {
     8e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8e4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8e8:	09 96       	adiw	r24, 0x09	; 9
     8ea:	43 97       	sbiw	r24, 0x13	; 19
     8ec:	b8 f0       	brcs	.+46     	; 0x91c <__stack+0x1d>
				TEMPenable = 1;
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <TEMPenable+0x1>
     8f6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <TEMPenable>
				usart_transmit("Temperature readings enabled.\n");
     8fa:	82 e9       	ldi	r24, 0x92	; 146
     8fc:	93 e0       	ldi	r25, 0x03	; 3
     8fe:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 10 ;
     902:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     906:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     90a:	6a e0       	ldi	r22, 0x0A	; 10
     90c:	70 e0       	ldi	r23, 0x00	; 0
     90e:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     912:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     916:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     91a:	14 c0       	rjmp	.+40     	; 0x944 <__stack+0x45>
			} else {
				TEMPenable = 0;
     91c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <TEMPenable+0x1>
     920:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <TEMPenable>
				usart_transmit("Temperature readings disabled.\n");
     924:	81 eb       	ldi	r24, 0xB1	; 177
     926:	93 e0       	ldi	r25, 0x03	; 3
     928:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 10 ;
     92c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     930:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     934:	6a e0       	ldi	r22, 0x0A	; 10
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     93c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     940:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			if (ReadingEnables != 0) {
     944:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     948:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     94c:	89 2b       	or	r24, r25
     94e:	59 f0       	breq	.+22     	; 0x966 <__stack+0x67>
				BRenbale = 1;
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <BRenbale+0x1>
     958:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <BRenbale>
				usart_transmit("Light Sensor enabled.\n");
     95c:	81 ed       	ldi	r24, 0xD1	; 209
     95e:	93 e0       	ldi	r25, 0x03	; 3
     960:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     964:	08 c0       	rjmp	.+16     	; 0x976 <__stack+0x77>
			} else {
				BRenbale = 0;
     966:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <BRenbale+0x1>
     96a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <BRenbale>
				usart_transmit("Light Sensor disabled.\n");
     96e:	88 ee       	ldi	r24, 0xE8	; 232
     970:	93 e0       	ldi	r25, 0x03	; 3
     972:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			}

			ReadingEnables = copyEn;
     976:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     97a:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__DATA_REGION_ORIGIN__>
			// echo the command back to the screen
			sprintf(echo, "Interval set: %d Hour, %d Minute, %d Second.\n ", hour, minute, sec);
     97e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <sec+0x1>
     982:	8f 93       	push	r24
     984:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sec>
     988:	8f 93       	push	r24
     98a:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <minute+0x1>
     98e:	8f 93       	push	r24
     990:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <minute>
     994:	8f 93       	push	r24
     996:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <hour+0x1>
     99a:	8f 93       	push	r24
     99c:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <hour>
     9a0:	8f 93       	push	r24
     9a2:	8d e6       	ldi	r24, 0x6D	; 109
     9a4:	92 e0       	ldi	r25, 0x02	; 2
     9a6:	9f 93       	push	r25
     9a8:	8f 93       	push	r24
     9aa:	8e 01       	movw	r16, r28
     9ac:	0f 5f       	subi	r16, 0xFF	; 255
     9ae:	1f 4f       	sbci	r17, 0xFF	; 255
     9b0:	1f 93       	push	r17
     9b2:	0f 93       	push	r16
     9b4:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
			usart_transmit(echo);
     9b8:	c8 01       	movw	r24, r16
     9ba:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			changed = 1;
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	90 93 1b 04 	sts	0x041B, r25	; 0x80041b <changed+0x1>
     9c6:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <changed>
			// hold if still pressed
			while((PIND&(1<<PIND2)) == 0);
     9ca:	0f b6       	in	r0, 0x3f	; 63
     9cc:	f8 94       	cli
     9ce:	de bf       	out	0x3e, r29	; 62
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	cd bf       	out	0x3d, r28	; 61
     9d4:	4a 9b       	sbis	0x09, 2	; 9
     9d6:	fe cf       	rjmp	.-4      	; 0x9d4 <__stack+0xd5>
			pressed = 0;
     9d8:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <pressed+0x1>
     9dc:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <pressed>
     9e0:	d2 c0       	rjmp	.+420    	; 0xb86 <__stack+0x287>
			int copyEn = ReadingEnables;
			usart_transmit("Old settings used\n");
			sprintf(echo, "Interval set: %d Hour, %d Minute, %d Second.\n ", hour, minute, sec);
			usart_transmit(echo);
			if (ReadingEnables == 0) {
				usart_transmit("Warning: No readings enabled.\n");
     9e2:	8a e3       	ldi	r24, 0x3A	; 58
     9e4:	93 e0       	ldi	r25, 0x03	; 3
     9e6:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			} 
			if ((ReadingEnables / 100) != 0) {
     9ea:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     9ee:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9f2:	8d 59       	subi	r24, 0x9D	; 157
     9f4:	9f 4f       	sbci	r25, 0xFF	; 255
     9f6:	87 3c       	cpi	r24, 0xC7	; 199
     9f8:	91 05       	cpc	r25, r1
     9fa:	b8 f0       	brcs	.+46     	; 0xa2a <__stack+0x12b>
				RHenable = 1;
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <RHenable+0x1>
     a04:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <RHenable>
				usart_transmit("Humidity readings enabled.\n");
     a08:	89 e5       	ldi	r24, 0x59	; 89
     a0a:	93 e0       	ldi	r25, 0x03	; 3
     a0c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 100;
     a10:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a14:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a18:	64 e6       	ldi	r22, 0x64	; 100
     a1a:	70 e0       	ldi	r23, 0x00	; 0
     a1c:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     a20:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a24:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     a28:	14 c0       	rjmp	.+40     	; 0xa52 <__stack+0x153>
			} else {
				RHenable = 0;
     a2a:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <RHenable+0x1>
     a2e:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <RHenable>
				usart_transmit("Humidity readings disabled.\n");
     a32:	85 e7       	ldi	r24, 0x75	; 117
     a34:	93 e0       	ldi	r25, 0x03	; 3
     a36:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 100;
     a3a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a3e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a42:	64 e6       	ldi	r22, 0x64	; 100
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     a4a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a4e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			if ((ReadingEnables / 10) != 0) {
     a52:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a56:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a5a:	09 96       	adiw	r24, 0x09	; 9
     a5c:	43 97       	sbiw	r24, 0x13	; 19
     a5e:	b8 f0       	brcs	.+46     	; 0xa8e <__stack+0x18f>
				TEMPenable = 1;
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <TEMPenable+0x1>
     a68:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <TEMPenable>
				usart_transmit("Temperature readings enabled.\n");
     a6c:	82 e9       	ldi	r24, 0x92	; 146
     a6e:	93 e0       	ldi	r25, 0x03	; 3
     a70:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 10 ;
     a74:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a78:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a7c:	6a e0       	ldi	r22, 0x0A	; 10
     a7e:	70 e0       	ldi	r23, 0x00	; 0
     a80:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     a84:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a88:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     a8c:	14 c0       	rjmp	.+40     	; 0xab6 <__stack+0x1b7>
			} else {
				TEMPenable = 0;
     a8e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <TEMPenable+0x1>
     a92:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <TEMPenable>
				usart_transmit("Temperature readings disabled.\n");
     a96:	81 eb       	ldi	r24, 0xB1	; 177
     a98:	93 e0       	ldi	r25, 0x03	; 3
     a9a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
				ReadingEnables = ReadingEnables % 10 ;
     a9e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     aa2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aa6:	6a e0       	ldi	r22, 0x0A	; 10
     aa8:	70 e0       	ldi	r23, 0x00	; 0
     aaa:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__divmodhi4>
     aae:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ab2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
			}
			if (ReadingEnables != 0) {
     ab6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     aba:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     abe:	89 2b       	or	r24, r25
     ac0:	59 f0       	breq	.+22     	; 0xad8 <__stack+0x1d9>
				BRenbale = 1;
     ac2:	81 e0       	ldi	r24, 0x01	; 1
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <BRenbale+0x1>
     aca:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <BRenbale>
				usart_transmit("Light Sensor enabled.\n");
     ace:	81 ed       	ldi	r24, 0xD1	; 209
     ad0:	93 e0       	ldi	r25, 0x03	; 3
     ad2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
     ad6:	08 c0       	rjmp	.+16     	; 0xae8 <__stack+0x1e9>
			} else {
				BRenbale = 0;
     ad8:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <BRenbale+0x1>
     adc:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <BRenbale>
				usart_transmit("Light Sensor disabled.\n");
     ae0:	88 ee       	ldi	r24, 0xE8	; 232
     ae2:	93 e0       	ldi	r25, 0x03	; 3
     ae4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			}
			
			ReadingEnables = copyEn;
     ae8:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     aec:	00 93 00 01 	sts	0x0100, r16	; 0x800100 <__DATA_REGION_ORIGIN__>
			changed = 1;
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	90 e0       	ldi	r25, 0x00	; 0
     af4:	90 93 1b 04 	sts	0x041B, r25	; 0x80041b <changed+0x1>
     af8:	80 93 1a 04 	sts	0x041A, r24	; 0x80041a <changed>
			// hold if still pressed
			while((PIND&(1<<PIND2)) == 0);
     afc:	4a 9b       	sbis	0x09, 2	; 9
     afe:	fe cf       	rjmp	.-4      	; 0xafc <__stack+0x1fd>
			pressed = 0;
     b00:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <pressed+0x1>
     b04:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <pressed>
		}
	}
} 
     b08:	3e c0       	rjmp	.+124    	; 0xb86 <__stack+0x287>
			changed = 1;
			// hold if still pressed
			while((PIND&(1<<PIND2)) == 0);
			pressed = 0;
		} else {
			int copyEn = ReadingEnables;
     b0a:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b0e:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			usart_transmit("Old settings used\n");
     b12:	80 e0       	ldi	r24, 0x00	; 0
     b14:	94 e0       	ldi	r25, 0x04	; 4
     b16:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			sprintf(echo, "Interval set: %d Hour, %d Minute, %d Second.\n ", hour, minute, sec);
     b1a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <sec+0x1>
     b1e:	8f 93       	push	r24
     b20:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <sec>
     b24:	8f 93       	push	r24
     b26:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <minute+0x1>
     b2a:	8f 93       	push	r24
     b2c:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <minute>
     b30:	8f 93       	push	r24
     b32:	80 91 22 04 	lds	r24, 0x0422	; 0x800422 <hour+0x1>
     b36:	8f 93       	push	r24
     b38:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <hour>
     b3c:	8f 93       	push	r24
     b3e:	8d e6       	ldi	r24, 0x6D	; 109
     b40:	92 e0       	ldi	r25, 0x02	; 2
     b42:	9f 93       	push	r25
     b44:	8f 93       	push	r24
     b46:	fe 01       	movw	r30, r28
     b48:	31 96       	adiw	r30, 0x01	; 1
     b4a:	7f 01       	movw	r14, r30
     b4c:	ff 93       	push	r31
     b4e:	ef 93       	push	r30
     b50:	0e 94 15 0b 	call	0x162a	; 0x162a <sprintf>
			usart_transmit(echo);
     b54:	c7 01       	movw	r24, r14
     b56:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <usart_transmit>
			if (ReadingEnables == 0) {
     b5a:	0f b6       	in	r0, 0x3f	; 63
     b5c:	f8 94       	cli
     b5e:	de bf       	out	0x3e, r29	; 62
     b60:	0f be       	out	0x3f, r0	; 63
     b62:	cd bf       	out	0x3d, r28	; 61
     b64:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b68:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b6c:	89 2b       	or	r24, r25
     b6e:	09 f0       	breq	.+2      	; 0xb72 <__stack+0x273>
     b70:	3c cf       	rjmp	.-392    	; 0x9ea <__stack+0xeb>
     b72:	37 cf       	rjmp	.-402    	; 0x9e2 <__stack+0xe3>
			}
			counter ++;
			pch = strtok (NULL, ","); // memories the modifed string so NULL for no new input
		}
		if (valid) { // valid time settings
			int copyEn = ReadingEnables;
     b74:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b78:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
			// modify enables
			if (ReadingEnables == 0) {
     b7c:	01 15       	cp	r16, r1
     b7e:	11 05       	cpc	r17, r1
     b80:	09 f0       	breq	.+2      	; 0xb84 <__stack+0x285>
     b82:	7a ce       	rjmp	.-780    	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     b84:	75 ce       	rjmp	.-790    	; 0x870 <__DATA_REGION_LENGTH__+0x70>
			// hold if still pressed
			while((PIND&(1<<PIND2)) == 0);
			pressed = 0;
		}
	}
} 
     b86:	ca 59       	subi	r28, 0x9A	; 154
     b88:	df 4f       	sbci	r29, 0xFF	; 255
     b8a:	0f b6       	in	r0, 0x3f	; 63
     b8c:	f8 94       	cli
     b8e:	de bf       	out	0x3e, r29	; 62
     b90:	0f be       	out	0x3f, r0	; 63
     b92:	cd bf       	out	0x3d, r28	; 61
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	ff 91       	pop	r31
     b9a:	ef 91       	pop	r30
     b9c:	bf 91       	pop	r27
     b9e:	af 91       	pop	r26
     ba0:	9f 91       	pop	r25
     ba2:	8f 91       	pop	r24
     ba4:	7f 91       	pop	r23
     ba6:	6f 91       	pop	r22
     ba8:	5f 91       	pop	r21
     baa:	4f 91       	pop	r20
     bac:	3f 91       	pop	r19
     bae:	2f 91       	pop	r18
     bb0:	1f 91       	pop	r17
     bb2:	0f 91       	pop	r16
     bb4:	ff 90       	pop	r15
     bb6:	ef 90       	pop	r14
     bb8:	df 90       	pop	r13
     bba:	cf 90       	pop	r12
     bbc:	0f 90       	pop	r0
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	0f 90       	pop	r0
     bc2:	1f 90       	pop	r1
     bc4:	18 95       	reti

00000bc6 <vfprintf>:
     bc6:	a0 e1       	ldi	r26, 0x10	; 16
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e9 ee       	ldi	r30, 0xE9	; 233
     bcc:	f5 e0       	ldi	r31, 0x05	; 5
     bce:	0c 94 74 09 	jmp	0x12e8	; 0x12e8 <__prologue_saves__>
     bd2:	7c 01       	movw	r14, r24
     bd4:	1b 01       	movw	r2, r22
     bd6:	6a 01       	movw	r12, r20
     bd8:	fc 01       	movw	r30, r24
     bda:	17 82       	std	Z+7, r1	; 0x07
     bdc:	16 82       	std	Z+6, r1	; 0x06
     bde:	83 81       	ldd	r24, Z+3	; 0x03
     be0:	81 ff       	sbrs	r24, 1
     be2:	44 c3       	rjmp	.+1672   	; 0x126c <vfprintf+0x6a6>
     be4:	9e 01       	movw	r18, r28
     be6:	2f 5f       	subi	r18, 0xFF	; 255
     be8:	3f 4f       	sbci	r19, 0xFF	; 255
     bea:	39 01       	movw	r6, r18
     bec:	f7 01       	movw	r30, r14
     bee:	93 81       	ldd	r25, Z+3	; 0x03
     bf0:	f1 01       	movw	r30, r2
     bf2:	93 fd       	sbrc	r25, 3
     bf4:	85 91       	lpm	r24, Z+
     bf6:	93 ff       	sbrs	r25, 3
     bf8:	81 91       	ld	r24, Z+
     bfa:	1f 01       	movw	r2, r30
     bfc:	88 23       	and	r24, r24
     bfe:	09 f4       	brne	.+2      	; 0xc02 <vfprintf+0x3c>
     c00:	31 c3       	rjmp	.+1634   	; 0x1264 <vfprintf+0x69e>
     c02:	85 32       	cpi	r24, 0x25	; 37
     c04:	39 f4       	brne	.+14     	; 0xc14 <vfprintf+0x4e>
     c06:	93 fd       	sbrc	r25, 3
     c08:	85 91       	lpm	r24, Z+
     c0a:	93 ff       	sbrs	r25, 3
     c0c:	81 91       	ld	r24, Z+
     c0e:	1f 01       	movw	r2, r30
     c10:	85 32       	cpi	r24, 0x25	; 37
     c12:	39 f4       	brne	.+14     	; 0xc22 <vfprintf+0x5c>
     c14:	b7 01       	movw	r22, r14
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     c1c:	56 01       	movw	r10, r12
     c1e:	65 01       	movw	r12, r10
     c20:	e5 cf       	rjmp	.-54     	; 0xbec <vfprintf+0x26>
     c22:	10 e0       	ldi	r17, 0x00	; 0
     c24:	51 2c       	mov	r5, r1
     c26:	91 2c       	mov	r9, r1
     c28:	ff e1       	ldi	r31, 0x1F	; 31
     c2a:	f9 15       	cp	r31, r9
     c2c:	d8 f0       	brcs	.+54     	; 0xc64 <vfprintf+0x9e>
     c2e:	8b 32       	cpi	r24, 0x2B	; 43
     c30:	79 f0       	breq	.+30     	; 0xc50 <vfprintf+0x8a>
     c32:	38 f4       	brcc	.+14     	; 0xc42 <vfprintf+0x7c>
     c34:	80 32       	cpi	r24, 0x20	; 32
     c36:	79 f0       	breq	.+30     	; 0xc56 <vfprintf+0x90>
     c38:	83 32       	cpi	r24, 0x23	; 35
     c3a:	a1 f4       	brne	.+40     	; 0xc64 <vfprintf+0x9e>
     c3c:	f9 2d       	mov	r31, r9
     c3e:	f0 61       	ori	r31, 0x10	; 16
     c40:	2e c0       	rjmp	.+92     	; 0xc9e <vfprintf+0xd8>
     c42:	8d 32       	cpi	r24, 0x2D	; 45
     c44:	61 f0       	breq	.+24     	; 0xc5e <vfprintf+0x98>
     c46:	80 33       	cpi	r24, 0x30	; 48
     c48:	69 f4       	brne	.+26     	; 0xc64 <vfprintf+0x9e>
     c4a:	29 2d       	mov	r18, r9
     c4c:	21 60       	ori	r18, 0x01	; 1
     c4e:	2d c0       	rjmp	.+90     	; 0xcaa <vfprintf+0xe4>
     c50:	39 2d       	mov	r19, r9
     c52:	32 60       	ori	r19, 0x02	; 2
     c54:	93 2e       	mov	r9, r19
     c56:	89 2d       	mov	r24, r9
     c58:	84 60       	ori	r24, 0x04	; 4
     c5a:	98 2e       	mov	r9, r24
     c5c:	2a c0       	rjmp	.+84     	; 0xcb2 <vfprintf+0xec>
     c5e:	e9 2d       	mov	r30, r9
     c60:	e8 60       	ori	r30, 0x08	; 8
     c62:	15 c0       	rjmp	.+42     	; 0xc8e <vfprintf+0xc8>
     c64:	97 fc       	sbrc	r9, 7
     c66:	2d c0       	rjmp	.+90     	; 0xcc2 <vfprintf+0xfc>
     c68:	20 ed       	ldi	r18, 0xD0	; 208
     c6a:	28 0f       	add	r18, r24
     c6c:	2a 30       	cpi	r18, 0x0A	; 10
     c6e:	88 f4       	brcc	.+34     	; 0xc92 <vfprintf+0xcc>
     c70:	96 fe       	sbrs	r9, 6
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <vfprintf+0xba>
     c74:	3a e0       	ldi	r19, 0x0A	; 10
     c76:	13 9f       	mul	r17, r19
     c78:	20 0d       	add	r18, r0
     c7a:	11 24       	eor	r1, r1
     c7c:	12 2f       	mov	r17, r18
     c7e:	19 c0       	rjmp	.+50     	; 0xcb2 <vfprintf+0xec>
     c80:	8a e0       	ldi	r24, 0x0A	; 10
     c82:	58 9e       	mul	r5, r24
     c84:	20 0d       	add	r18, r0
     c86:	11 24       	eor	r1, r1
     c88:	52 2e       	mov	r5, r18
     c8a:	e9 2d       	mov	r30, r9
     c8c:	e0 62       	ori	r30, 0x20	; 32
     c8e:	9e 2e       	mov	r9, r30
     c90:	10 c0       	rjmp	.+32     	; 0xcb2 <vfprintf+0xec>
     c92:	8e 32       	cpi	r24, 0x2E	; 46
     c94:	31 f4       	brne	.+12     	; 0xca2 <vfprintf+0xdc>
     c96:	96 fc       	sbrc	r9, 6
     c98:	e5 c2       	rjmp	.+1482   	; 0x1264 <vfprintf+0x69e>
     c9a:	f9 2d       	mov	r31, r9
     c9c:	f0 64       	ori	r31, 0x40	; 64
     c9e:	9f 2e       	mov	r9, r31
     ca0:	08 c0       	rjmp	.+16     	; 0xcb2 <vfprintf+0xec>
     ca2:	8c 36       	cpi	r24, 0x6C	; 108
     ca4:	21 f4       	brne	.+8      	; 0xcae <vfprintf+0xe8>
     ca6:	29 2d       	mov	r18, r9
     ca8:	20 68       	ori	r18, 0x80	; 128
     caa:	92 2e       	mov	r9, r18
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0xec>
     cae:	88 36       	cpi	r24, 0x68	; 104
     cb0:	41 f4       	brne	.+16     	; 0xcc2 <vfprintf+0xfc>
     cb2:	f1 01       	movw	r30, r2
     cb4:	93 fd       	sbrc	r25, 3
     cb6:	85 91       	lpm	r24, Z+
     cb8:	93 ff       	sbrs	r25, 3
     cba:	81 91       	ld	r24, Z+
     cbc:	1f 01       	movw	r2, r30
     cbe:	81 11       	cpse	r24, r1
     cc0:	b3 cf       	rjmp	.-154    	; 0xc28 <vfprintf+0x62>
     cc2:	9b eb       	ldi	r25, 0xBB	; 187
     cc4:	98 0f       	add	r25, r24
     cc6:	93 30       	cpi	r25, 0x03	; 3
     cc8:	20 f4       	brcc	.+8      	; 0xcd2 <vfprintf+0x10c>
     cca:	99 2d       	mov	r25, r9
     ccc:	90 61       	ori	r25, 0x10	; 16
     cce:	80 5e       	subi	r24, 0xE0	; 224
     cd0:	07 c0       	rjmp	.+14     	; 0xce0 <vfprintf+0x11a>
     cd2:	9b e9       	ldi	r25, 0x9B	; 155
     cd4:	98 0f       	add	r25, r24
     cd6:	93 30       	cpi	r25, 0x03	; 3
     cd8:	08 f0       	brcs	.+2      	; 0xcdc <vfprintf+0x116>
     cda:	66 c1       	rjmp	.+716    	; 0xfa8 <vfprintf+0x3e2>
     cdc:	99 2d       	mov	r25, r9
     cde:	9f 7e       	andi	r25, 0xEF	; 239
     ce0:	96 ff       	sbrs	r25, 6
     ce2:	16 e0       	ldi	r17, 0x06	; 6
     ce4:	9f 73       	andi	r25, 0x3F	; 63
     ce6:	99 2e       	mov	r9, r25
     ce8:	85 36       	cpi	r24, 0x65	; 101
     cea:	19 f4       	brne	.+6      	; 0xcf2 <vfprintf+0x12c>
     cec:	90 64       	ori	r25, 0x40	; 64
     cee:	99 2e       	mov	r9, r25
     cf0:	08 c0       	rjmp	.+16     	; 0xd02 <vfprintf+0x13c>
     cf2:	86 36       	cpi	r24, 0x66	; 102
     cf4:	21 f4       	brne	.+8      	; 0xcfe <vfprintf+0x138>
     cf6:	39 2f       	mov	r19, r25
     cf8:	30 68       	ori	r19, 0x80	; 128
     cfa:	93 2e       	mov	r9, r19
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x13c>
     cfe:	11 11       	cpse	r17, r1
     d00:	11 50       	subi	r17, 0x01	; 1
     d02:	97 fe       	sbrs	r9, 7
     d04:	07 c0       	rjmp	.+14     	; 0xd14 <vfprintf+0x14e>
     d06:	1c 33       	cpi	r17, 0x3C	; 60
     d08:	50 f4       	brcc	.+20     	; 0xd1e <vfprintf+0x158>
     d0a:	44 24       	eor	r4, r4
     d0c:	43 94       	inc	r4
     d0e:	41 0e       	add	r4, r17
     d10:	27 e0       	ldi	r18, 0x07	; 7
     d12:	0b c0       	rjmp	.+22     	; 0xd2a <vfprintf+0x164>
     d14:	18 30       	cpi	r17, 0x08	; 8
     d16:	38 f0       	brcs	.+14     	; 0xd26 <vfprintf+0x160>
     d18:	27 e0       	ldi	r18, 0x07	; 7
     d1a:	17 e0       	ldi	r17, 0x07	; 7
     d1c:	05 c0       	rjmp	.+10     	; 0xd28 <vfprintf+0x162>
     d1e:	27 e0       	ldi	r18, 0x07	; 7
     d20:	9c e3       	ldi	r25, 0x3C	; 60
     d22:	49 2e       	mov	r4, r25
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <vfprintf+0x164>
     d26:	21 2f       	mov	r18, r17
     d28:	41 2c       	mov	r4, r1
     d2a:	56 01       	movw	r10, r12
     d2c:	84 e0       	ldi	r24, 0x04	; 4
     d2e:	a8 0e       	add	r10, r24
     d30:	b1 1c       	adc	r11, r1
     d32:	f6 01       	movw	r30, r12
     d34:	60 81       	ld	r22, Z
     d36:	71 81       	ldd	r23, Z+1	; 0x01
     d38:	82 81       	ldd	r24, Z+2	; 0x02
     d3a:	93 81       	ldd	r25, Z+3	; 0x03
     d3c:	04 2d       	mov	r16, r4
     d3e:	a3 01       	movw	r20, r6
     d40:	0e 94 bf 09 	call	0x137e	; 0x137e <__ftoa_engine>
     d44:	6c 01       	movw	r12, r24
     d46:	f9 81       	ldd	r31, Y+1	; 0x01
     d48:	fc 87       	std	Y+12, r31	; 0x0c
     d4a:	f0 ff       	sbrs	r31, 0
     d4c:	02 c0       	rjmp	.+4      	; 0xd52 <vfprintf+0x18c>
     d4e:	f3 ff       	sbrs	r31, 3
     d50:	06 c0       	rjmp	.+12     	; 0xd5e <vfprintf+0x198>
     d52:	91 fc       	sbrc	r9, 1
     d54:	06 c0       	rjmp	.+12     	; 0xd62 <vfprintf+0x19c>
     d56:	92 fe       	sbrs	r9, 2
     d58:	06 c0       	rjmp	.+12     	; 0xd66 <vfprintf+0x1a0>
     d5a:	00 e2       	ldi	r16, 0x20	; 32
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <vfprintf+0x1a2>
     d5e:	0d e2       	ldi	r16, 0x2D	; 45
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <vfprintf+0x1a2>
     d62:	0b e2       	ldi	r16, 0x2B	; 43
     d64:	01 c0       	rjmp	.+2      	; 0xd68 <vfprintf+0x1a2>
     d66:	00 e0       	ldi	r16, 0x00	; 0
     d68:	8c 85       	ldd	r24, Y+12	; 0x0c
     d6a:	8c 70       	andi	r24, 0x0C	; 12
     d6c:	19 f0       	breq	.+6      	; 0xd74 <vfprintf+0x1ae>
     d6e:	01 11       	cpse	r16, r1
     d70:	5a c2       	rjmp	.+1204   	; 0x1226 <vfprintf+0x660>
     d72:	9b c2       	rjmp	.+1334   	; 0x12aa <vfprintf+0x6e4>
     d74:	97 fe       	sbrs	r9, 7
     d76:	10 c0       	rjmp	.+32     	; 0xd98 <vfprintf+0x1d2>
     d78:	4c 0c       	add	r4, r12
     d7a:	fc 85       	ldd	r31, Y+12	; 0x0c
     d7c:	f4 ff       	sbrs	r31, 4
     d7e:	04 c0       	rjmp	.+8      	; 0xd88 <vfprintf+0x1c2>
     d80:	8a 81       	ldd	r24, Y+2	; 0x02
     d82:	81 33       	cpi	r24, 0x31	; 49
     d84:	09 f4       	brne	.+2      	; 0xd88 <vfprintf+0x1c2>
     d86:	4a 94       	dec	r4
     d88:	14 14       	cp	r1, r4
     d8a:	74 f5       	brge	.+92     	; 0xde8 <vfprintf+0x222>
     d8c:	28 e0       	ldi	r18, 0x08	; 8
     d8e:	24 15       	cp	r18, r4
     d90:	78 f5       	brcc	.+94     	; 0xdf0 <vfprintf+0x22a>
     d92:	88 e0       	ldi	r24, 0x08	; 8
     d94:	48 2e       	mov	r4, r24
     d96:	2c c0       	rjmp	.+88     	; 0xdf0 <vfprintf+0x22a>
     d98:	96 fc       	sbrc	r9, 6
     d9a:	2a c0       	rjmp	.+84     	; 0xdf0 <vfprintf+0x22a>
     d9c:	81 2f       	mov	r24, r17
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	8c 15       	cp	r24, r12
     da2:	9d 05       	cpc	r25, r13
     da4:	9c f0       	brlt	.+38     	; 0xdcc <vfprintf+0x206>
     da6:	3c ef       	ldi	r19, 0xFC	; 252
     da8:	c3 16       	cp	r12, r19
     daa:	3f ef       	ldi	r19, 0xFF	; 255
     dac:	d3 06       	cpc	r13, r19
     dae:	74 f0       	brlt	.+28     	; 0xdcc <vfprintf+0x206>
     db0:	89 2d       	mov	r24, r9
     db2:	80 68       	ori	r24, 0x80	; 128
     db4:	98 2e       	mov	r9, r24
     db6:	0a c0       	rjmp	.+20     	; 0xdcc <vfprintf+0x206>
     db8:	e2 e0       	ldi	r30, 0x02	; 2
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	ec 0f       	add	r30, r28
     dbe:	fd 1f       	adc	r31, r29
     dc0:	e1 0f       	add	r30, r17
     dc2:	f1 1d       	adc	r31, r1
     dc4:	80 81       	ld	r24, Z
     dc6:	80 33       	cpi	r24, 0x30	; 48
     dc8:	19 f4       	brne	.+6      	; 0xdd0 <vfprintf+0x20a>
     dca:	11 50       	subi	r17, 0x01	; 1
     dcc:	11 11       	cpse	r17, r1
     dce:	f4 cf       	rjmp	.-24     	; 0xdb8 <vfprintf+0x1f2>
     dd0:	97 fe       	sbrs	r9, 7
     dd2:	0e c0       	rjmp	.+28     	; 0xdf0 <vfprintf+0x22a>
     dd4:	44 24       	eor	r4, r4
     dd6:	43 94       	inc	r4
     dd8:	41 0e       	add	r4, r17
     dda:	81 2f       	mov	r24, r17
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	c8 16       	cp	r12, r24
     de0:	d9 06       	cpc	r13, r25
     de2:	2c f4       	brge	.+10     	; 0xdee <vfprintf+0x228>
     de4:	1c 19       	sub	r17, r12
     de6:	04 c0       	rjmp	.+8      	; 0xdf0 <vfprintf+0x22a>
     de8:	44 24       	eor	r4, r4
     dea:	43 94       	inc	r4
     dec:	01 c0       	rjmp	.+2      	; 0xdf0 <vfprintf+0x22a>
     dee:	10 e0       	ldi	r17, 0x00	; 0
     df0:	97 fe       	sbrs	r9, 7
     df2:	06 c0       	rjmp	.+12     	; 0xe00 <vfprintf+0x23a>
     df4:	1c 14       	cp	r1, r12
     df6:	1d 04       	cpc	r1, r13
     df8:	34 f4       	brge	.+12     	; 0xe06 <vfprintf+0x240>
     dfa:	c6 01       	movw	r24, r12
     dfc:	01 96       	adiw	r24, 0x01	; 1
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <vfprintf+0x244>
     e00:	85 e0       	ldi	r24, 0x05	; 5
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <vfprintf+0x244>
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	01 11       	cpse	r16, r1
     e0c:	01 96       	adiw	r24, 0x01	; 1
     e0e:	11 23       	and	r17, r17
     e10:	31 f0       	breq	.+12     	; 0xe1e <vfprintf+0x258>
     e12:	21 2f       	mov	r18, r17
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	2f 5f       	subi	r18, 0xFF	; 255
     e18:	3f 4f       	sbci	r19, 0xFF	; 255
     e1a:	82 0f       	add	r24, r18
     e1c:	93 1f       	adc	r25, r19
     e1e:	25 2d       	mov	r18, r5
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	82 17       	cp	r24, r18
     e24:	93 07       	cpc	r25, r19
     e26:	14 f4       	brge	.+4      	; 0xe2c <vfprintf+0x266>
     e28:	58 1a       	sub	r5, r24
     e2a:	01 c0       	rjmp	.+2      	; 0xe2e <vfprintf+0x268>
     e2c:	51 2c       	mov	r5, r1
     e2e:	89 2d       	mov	r24, r9
     e30:	89 70       	andi	r24, 0x09	; 9
     e32:	49 f4       	brne	.+18     	; 0xe46 <vfprintf+0x280>
     e34:	55 20       	and	r5, r5
     e36:	39 f0       	breq	.+14     	; 0xe46 <vfprintf+0x280>
     e38:	b7 01       	movw	r22, r14
     e3a:	80 e2       	ldi	r24, 0x20	; 32
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     e42:	5a 94       	dec	r5
     e44:	f7 cf       	rjmp	.-18     	; 0xe34 <vfprintf+0x26e>
     e46:	00 23       	and	r16, r16
     e48:	29 f0       	breq	.+10     	; 0xe54 <vfprintf+0x28e>
     e4a:	b7 01       	movw	r22, r14
     e4c:	80 2f       	mov	r24, r16
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     e54:	93 fc       	sbrc	r9, 3
     e56:	09 c0       	rjmp	.+18     	; 0xe6a <vfprintf+0x2a4>
     e58:	55 20       	and	r5, r5
     e5a:	39 f0       	breq	.+14     	; 0xe6a <vfprintf+0x2a4>
     e5c:	b7 01       	movw	r22, r14
     e5e:	80 e3       	ldi	r24, 0x30	; 48
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     e66:	5a 94       	dec	r5
     e68:	f7 cf       	rjmp	.-18     	; 0xe58 <vfprintf+0x292>
     e6a:	97 fe       	sbrs	r9, 7
     e6c:	4c c0       	rjmp	.+152    	; 0xf06 <vfprintf+0x340>
     e6e:	46 01       	movw	r8, r12
     e70:	d7 fe       	sbrs	r13, 7
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x2b2>
     e74:	81 2c       	mov	r8, r1
     e76:	91 2c       	mov	r9, r1
     e78:	c6 01       	movw	r24, r12
     e7a:	88 19       	sub	r24, r8
     e7c:	99 09       	sbc	r25, r9
     e7e:	f3 01       	movw	r30, r6
     e80:	e8 0f       	add	r30, r24
     e82:	f9 1f       	adc	r31, r25
     e84:	fe 87       	std	Y+14, r31	; 0x0e
     e86:	ed 87       	std	Y+13, r30	; 0x0d
     e88:	96 01       	movw	r18, r12
     e8a:	24 19       	sub	r18, r4
     e8c:	31 09       	sbc	r19, r1
     e8e:	38 8b       	std	Y+16, r19	; 0x10
     e90:	2f 87       	std	Y+15, r18	; 0x0f
     e92:	01 2f       	mov	r16, r17
     e94:	10 e0       	ldi	r17, 0x00	; 0
     e96:	11 95       	neg	r17
     e98:	01 95       	neg	r16
     e9a:	11 09       	sbc	r17, r1
     e9c:	3f ef       	ldi	r19, 0xFF	; 255
     e9e:	83 16       	cp	r8, r19
     ea0:	93 06       	cpc	r9, r19
     ea2:	29 f4       	brne	.+10     	; 0xeae <vfprintf+0x2e8>
     ea4:	b7 01       	movw	r22, r14
     ea6:	8e e2       	ldi	r24, 0x2E	; 46
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     eae:	c8 14       	cp	r12, r8
     eb0:	d9 04       	cpc	r13, r9
     eb2:	4c f0       	brlt	.+18     	; 0xec6 <vfprintf+0x300>
     eb4:	8f 85       	ldd	r24, Y+15	; 0x0f
     eb6:	98 89       	ldd	r25, Y+16	; 0x10
     eb8:	88 15       	cp	r24, r8
     eba:	99 05       	cpc	r25, r9
     ebc:	24 f4       	brge	.+8      	; 0xec6 <vfprintf+0x300>
     ebe:	ed 85       	ldd	r30, Y+13	; 0x0d
     ec0:	fe 85       	ldd	r31, Y+14	; 0x0e
     ec2:	81 81       	ldd	r24, Z+1	; 0x01
     ec4:	01 c0       	rjmp	.+2      	; 0xec8 <vfprintf+0x302>
     ec6:	80 e3       	ldi	r24, 0x30	; 48
     ec8:	f1 e0       	ldi	r31, 0x01	; 1
     eca:	8f 1a       	sub	r8, r31
     ecc:	91 08       	sbc	r9, r1
     ece:	2d 85       	ldd	r18, Y+13	; 0x0d
     ed0:	3e 85       	ldd	r19, Y+14	; 0x0e
     ed2:	2f 5f       	subi	r18, 0xFF	; 255
     ed4:	3f 4f       	sbci	r19, 0xFF	; 255
     ed6:	3e 87       	std	Y+14, r19	; 0x0e
     ed8:	2d 87       	std	Y+13, r18	; 0x0d
     eda:	80 16       	cp	r8, r16
     edc:	91 06       	cpc	r9, r17
     ede:	2c f0       	brlt	.+10     	; 0xeea <vfprintf+0x324>
     ee0:	b7 01       	movw	r22, r14
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     ee8:	d9 cf       	rjmp	.-78     	; 0xe9c <vfprintf+0x2d6>
     eea:	c8 14       	cp	r12, r8
     eec:	d9 04       	cpc	r13, r9
     eee:	41 f4       	brne	.+16     	; 0xf00 <vfprintf+0x33a>
     ef0:	9a 81       	ldd	r25, Y+2	; 0x02
     ef2:	96 33       	cpi	r25, 0x36	; 54
     ef4:	20 f4       	brcc	.+8      	; 0xefe <vfprintf+0x338>
     ef6:	95 33       	cpi	r25, 0x35	; 53
     ef8:	19 f4       	brne	.+6      	; 0xf00 <vfprintf+0x33a>
     efa:	3c 85       	ldd	r19, Y+12	; 0x0c
     efc:	34 ff       	sbrs	r19, 4
     efe:	81 e3       	ldi	r24, 0x31	; 49
     f00:	b7 01       	movw	r22, r14
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	4e c0       	rjmp	.+156    	; 0xfa2 <vfprintf+0x3dc>
     f06:	8a 81       	ldd	r24, Y+2	; 0x02
     f08:	81 33       	cpi	r24, 0x31	; 49
     f0a:	19 f0       	breq	.+6      	; 0xf12 <vfprintf+0x34c>
     f0c:	9c 85       	ldd	r25, Y+12	; 0x0c
     f0e:	9f 7e       	andi	r25, 0xEF	; 239
     f10:	9c 87       	std	Y+12, r25	; 0x0c
     f12:	b7 01       	movw	r22, r14
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f1a:	11 11       	cpse	r17, r1
     f1c:	05 c0       	rjmp	.+10     	; 0xf28 <vfprintf+0x362>
     f1e:	94 fc       	sbrc	r9, 4
     f20:	18 c0       	rjmp	.+48     	; 0xf52 <vfprintf+0x38c>
     f22:	85 e6       	ldi	r24, 0x65	; 101
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	17 c0       	rjmp	.+46     	; 0xf56 <vfprintf+0x390>
     f28:	b7 01       	movw	r22, r14
     f2a:	8e e2       	ldi	r24, 0x2E	; 46
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f32:	1e 5f       	subi	r17, 0xFE	; 254
     f34:	82 e0       	ldi	r24, 0x02	; 2
     f36:	01 e0       	ldi	r16, 0x01	; 1
     f38:	08 0f       	add	r16, r24
     f3a:	f3 01       	movw	r30, r6
     f3c:	e8 0f       	add	r30, r24
     f3e:	f1 1d       	adc	r31, r1
     f40:	80 81       	ld	r24, Z
     f42:	b7 01       	movw	r22, r14
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f4a:	80 2f       	mov	r24, r16
     f4c:	01 13       	cpse	r16, r17
     f4e:	f3 cf       	rjmp	.-26     	; 0xf36 <vfprintf+0x370>
     f50:	e6 cf       	rjmp	.-52     	; 0xf1e <vfprintf+0x358>
     f52:	85 e4       	ldi	r24, 0x45	; 69
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	b7 01       	movw	r22, r14
     f58:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f5c:	d7 fc       	sbrc	r13, 7
     f5e:	06 c0       	rjmp	.+12     	; 0xf6c <vfprintf+0x3a6>
     f60:	c1 14       	cp	r12, r1
     f62:	d1 04       	cpc	r13, r1
     f64:	41 f4       	brne	.+16     	; 0xf76 <vfprintf+0x3b0>
     f66:	ec 85       	ldd	r30, Y+12	; 0x0c
     f68:	e4 ff       	sbrs	r30, 4
     f6a:	05 c0       	rjmp	.+10     	; 0xf76 <vfprintf+0x3b0>
     f6c:	d1 94       	neg	r13
     f6e:	c1 94       	neg	r12
     f70:	d1 08       	sbc	r13, r1
     f72:	8d e2       	ldi	r24, 0x2D	; 45
     f74:	01 c0       	rjmp	.+2      	; 0xf78 <vfprintf+0x3b2>
     f76:	8b e2       	ldi	r24, 0x2B	; 43
     f78:	b7 01       	movw	r22, r14
     f7a:	90 e0       	ldi	r25, 0x00	; 0
     f7c:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f80:	80 e3       	ldi	r24, 0x30	; 48
     f82:	2a e0       	ldi	r18, 0x0A	; 10
     f84:	c2 16       	cp	r12, r18
     f86:	d1 04       	cpc	r13, r1
     f88:	2c f0       	brlt	.+10     	; 0xf94 <vfprintf+0x3ce>
     f8a:	8f 5f       	subi	r24, 0xFF	; 255
     f8c:	fa e0       	ldi	r31, 0x0A	; 10
     f8e:	cf 1a       	sub	r12, r31
     f90:	d1 08       	sbc	r13, r1
     f92:	f7 cf       	rjmp	.-18     	; 0xf82 <vfprintf+0x3bc>
     f94:	b7 01       	movw	r22, r14
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     f9c:	b7 01       	movw	r22, r14
     f9e:	c6 01       	movw	r24, r12
     fa0:	c0 96       	adiw	r24, 0x30	; 48
     fa2:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
     fa6:	54 c1       	rjmp	.+680    	; 0x1250 <vfprintf+0x68a>
     fa8:	83 36       	cpi	r24, 0x63	; 99
     faa:	31 f0       	breq	.+12     	; 0xfb8 <vfprintf+0x3f2>
     fac:	83 37       	cpi	r24, 0x73	; 115
     fae:	79 f0       	breq	.+30     	; 0xfce <vfprintf+0x408>
     fb0:	83 35       	cpi	r24, 0x53	; 83
     fb2:	09 f0       	breq	.+2      	; 0xfb6 <vfprintf+0x3f0>
     fb4:	56 c0       	rjmp	.+172    	; 0x1062 <vfprintf+0x49c>
     fb6:	20 c0       	rjmp	.+64     	; 0xff8 <vfprintf+0x432>
     fb8:	56 01       	movw	r10, r12
     fba:	32 e0       	ldi	r19, 0x02	; 2
     fbc:	a3 0e       	add	r10, r19
     fbe:	b1 1c       	adc	r11, r1
     fc0:	f6 01       	movw	r30, r12
     fc2:	80 81       	ld	r24, Z
     fc4:	89 83       	std	Y+1, r24	; 0x01
     fc6:	01 e0       	ldi	r16, 0x01	; 1
     fc8:	10 e0       	ldi	r17, 0x00	; 0
     fca:	63 01       	movw	r12, r6
     fcc:	12 c0       	rjmp	.+36     	; 0xff2 <vfprintf+0x42c>
     fce:	56 01       	movw	r10, r12
     fd0:	f2 e0       	ldi	r31, 0x02	; 2
     fd2:	af 0e       	add	r10, r31
     fd4:	b1 1c       	adc	r11, r1
     fd6:	f6 01       	movw	r30, r12
     fd8:	c0 80       	ld	r12, Z
     fda:	d1 80       	ldd	r13, Z+1	; 0x01
     fdc:	96 fe       	sbrs	r9, 6
     fde:	03 c0       	rjmp	.+6      	; 0xfe6 <vfprintf+0x420>
     fe0:	61 2f       	mov	r22, r17
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <vfprintf+0x424>
     fe6:	6f ef       	ldi	r22, 0xFF	; 255
     fe8:	7f ef       	ldi	r23, 0xFF	; 255
     fea:	c6 01       	movw	r24, r12
     fec:	0e 94 a7 0a 	call	0x154e	; 0x154e <strnlen>
     ff0:	8c 01       	movw	r16, r24
     ff2:	f9 2d       	mov	r31, r9
     ff4:	ff 77       	andi	r31, 0x7F	; 127
     ff6:	14 c0       	rjmp	.+40     	; 0x1020 <vfprintf+0x45a>
     ff8:	56 01       	movw	r10, r12
     ffa:	22 e0       	ldi	r18, 0x02	; 2
     ffc:	a2 0e       	add	r10, r18
     ffe:	b1 1c       	adc	r11, r1
    1000:	f6 01       	movw	r30, r12
    1002:	c0 80       	ld	r12, Z
    1004:	d1 80       	ldd	r13, Z+1	; 0x01
    1006:	96 fe       	sbrs	r9, 6
    1008:	03 c0       	rjmp	.+6      	; 0x1010 <vfprintf+0x44a>
    100a:	61 2f       	mov	r22, r17
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <vfprintf+0x44e>
    1010:	6f ef       	ldi	r22, 0xFF	; 255
    1012:	7f ef       	ldi	r23, 0xFF	; 255
    1014:	c6 01       	movw	r24, r12
    1016:	0e 94 97 0a 	call	0x152e	; 0x152e <strnlen_P>
    101a:	8c 01       	movw	r16, r24
    101c:	f9 2d       	mov	r31, r9
    101e:	f0 68       	ori	r31, 0x80	; 128
    1020:	9f 2e       	mov	r9, r31
    1022:	f3 fd       	sbrc	r31, 3
    1024:	1a c0       	rjmp	.+52     	; 0x105a <vfprintf+0x494>
    1026:	85 2d       	mov	r24, r5
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	08 17       	cp	r16, r24
    102c:	19 07       	cpc	r17, r25
    102e:	a8 f4       	brcc	.+42     	; 0x105a <vfprintf+0x494>
    1030:	b7 01       	movw	r22, r14
    1032:	80 e2       	ldi	r24, 0x20	; 32
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    103a:	5a 94       	dec	r5
    103c:	f4 cf       	rjmp	.-24     	; 0x1026 <vfprintf+0x460>
    103e:	f6 01       	movw	r30, r12
    1040:	97 fc       	sbrc	r9, 7
    1042:	85 91       	lpm	r24, Z+
    1044:	97 fe       	sbrs	r9, 7
    1046:	81 91       	ld	r24, Z+
    1048:	6f 01       	movw	r12, r30
    104a:	b7 01       	movw	r22, r14
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    1052:	51 10       	cpse	r5, r1
    1054:	5a 94       	dec	r5
    1056:	01 50       	subi	r16, 0x01	; 1
    1058:	11 09       	sbc	r17, r1
    105a:	01 15       	cp	r16, r1
    105c:	11 05       	cpc	r17, r1
    105e:	79 f7       	brne	.-34     	; 0x103e <vfprintf+0x478>
    1060:	f7 c0       	rjmp	.+494    	; 0x1250 <vfprintf+0x68a>
    1062:	84 36       	cpi	r24, 0x64	; 100
    1064:	11 f0       	breq	.+4      	; 0x106a <vfprintf+0x4a4>
    1066:	89 36       	cpi	r24, 0x69	; 105
    1068:	61 f5       	brne	.+88     	; 0x10c2 <vfprintf+0x4fc>
    106a:	56 01       	movw	r10, r12
    106c:	97 fe       	sbrs	r9, 7
    106e:	09 c0       	rjmp	.+18     	; 0x1082 <vfprintf+0x4bc>
    1070:	24 e0       	ldi	r18, 0x04	; 4
    1072:	a2 0e       	add	r10, r18
    1074:	b1 1c       	adc	r11, r1
    1076:	f6 01       	movw	r30, r12
    1078:	60 81       	ld	r22, Z
    107a:	71 81       	ldd	r23, Z+1	; 0x01
    107c:	82 81       	ldd	r24, Z+2	; 0x02
    107e:	93 81       	ldd	r25, Z+3	; 0x03
    1080:	0a c0       	rjmp	.+20     	; 0x1096 <vfprintf+0x4d0>
    1082:	f2 e0       	ldi	r31, 0x02	; 2
    1084:	af 0e       	add	r10, r31
    1086:	b1 1c       	adc	r11, r1
    1088:	f6 01       	movw	r30, r12
    108a:	60 81       	ld	r22, Z
    108c:	71 81       	ldd	r23, Z+1	; 0x01
    108e:	07 2e       	mov	r0, r23
    1090:	00 0c       	add	r0, r0
    1092:	88 0b       	sbc	r24, r24
    1094:	99 0b       	sbc	r25, r25
    1096:	f9 2d       	mov	r31, r9
    1098:	ff 76       	andi	r31, 0x6F	; 111
    109a:	9f 2e       	mov	r9, r31
    109c:	97 ff       	sbrs	r25, 7
    109e:	09 c0       	rjmp	.+18     	; 0x10b2 <vfprintf+0x4ec>
    10a0:	90 95       	com	r25
    10a2:	80 95       	com	r24
    10a4:	70 95       	com	r23
    10a6:	61 95       	neg	r22
    10a8:	7f 4f       	sbci	r23, 0xFF	; 255
    10aa:	8f 4f       	sbci	r24, 0xFF	; 255
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	f0 68       	ori	r31, 0x80	; 128
    10b0:	9f 2e       	mov	r9, r31
    10b2:	2a e0       	ldi	r18, 0x0A	; 10
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	a3 01       	movw	r20, r6
    10b8:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__ultoa_invert>
    10bc:	c8 2e       	mov	r12, r24
    10be:	c6 18       	sub	r12, r6
    10c0:	3f c0       	rjmp	.+126    	; 0x1140 <vfprintf+0x57a>
    10c2:	09 2d       	mov	r16, r9
    10c4:	85 37       	cpi	r24, 0x75	; 117
    10c6:	21 f4       	brne	.+8      	; 0x10d0 <vfprintf+0x50a>
    10c8:	0f 7e       	andi	r16, 0xEF	; 239
    10ca:	2a e0       	ldi	r18, 0x0A	; 10
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	1d c0       	rjmp	.+58     	; 0x110a <vfprintf+0x544>
    10d0:	09 7f       	andi	r16, 0xF9	; 249
    10d2:	8f 36       	cpi	r24, 0x6F	; 111
    10d4:	91 f0       	breq	.+36     	; 0x10fa <vfprintf+0x534>
    10d6:	18 f4       	brcc	.+6      	; 0x10de <vfprintf+0x518>
    10d8:	88 35       	cpi	r24, 0x58	; 88
    10da:	59 f0       	breq	.+22     	; 0x10f2 <vfprintf+0x52c>
    10dc:	c3 c0       	rjmp	.+390    	; 0x1264 <vfprintf+0x69e>
    10de:	80 37       	cpi	r24, 0x70	; 112
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <vfprintf+0x522>
    10e2:	88 37       	cpi	r24, 0x78	; 120
    10e4:	11 f0       	breq	.+4      	; 0x10ea <vfprintf+0x524>
    10e6:	be c0       	rjmp	.+380    	; 0x1264 <vfprintf+0x69e>
    10e8:	00 61       	ori	r16, 0x10	; 16
    10ea:	04 ff       	sbrs	r16, 4
    10ec:	09 c0       	rjmp	.+18     	; 0x1100 <vfprintf+0x53a>
    10ee:	04 60       	ori	r16, 0x04	; 4
    10f0:	07 c0       	rjmp	.+14     	; 0x1100 <vfprintf+0x53a>
    10f2:	94 fe       	sbrs	r9, 4
    10f4:	08 c0       	rjmp	.+16     	; 0x1106 <vfprintf+0x540>
    10f6:	06 60       	ori	r16, 0x06	; 6
    10f8:	06 c0       	rjmp	.+12     	; 0x1106 <vfprintf+0x540>
    10fa:	28 e0       	ldi	r18, 0x08	; 8
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	05 c0       	rjmp	.+10     	; 0x110a <vfprintf+0x544>
    1100:	20 e1       	ldi	r18, 0x10	; 16
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	02 c0       	rjmp	.+4      	; 0x110a <vfprintf+0x544>
    1106:	20 e1       	ldi	r18, 0x10	; 16
    1108:	32 e0       	ldi	r19, 0x02	; 2
    110a:	56 01       	movw	r10, r12
    110c:	07 ff       	sbrs	r16, 7
    110e:	09 c0       	rjmp	.+18     	; 0x1122 <vfprintf+0x55c>
    1110:	84 e0       	ldi	r24, 0x04	; 4
    1112:	a8 0e       	add	r10, r24
    1114:	b1 1c       	adc	r11, r1
    1116:	f6 01       	movw	r30, r12
    1118:	60 81       	ld	r22, Z
    111a:	71 81       	ldd	r23, Z+1	; 0x01
    111c:	82 81       	ldd	r24, Z+2	; 0x02
    111e:	93 81       	ldd	r25, Z+3	; 0x03
    1120:	08 c0       	rjmp	.+16     	; 0x1132 <vfprintf+0x56c>
    1122:	f2 e0       	ldi	r31, 0x02	; 2
    1124:	af 0e       	add	r10, r31
    1126:	b1 1c       	adc	r11, r1
    1128:	f6 01       	movw	r30, r12
    112a:	60 81       	ld	r22, Z
    112c:	71 81       	ldd	r23, Z+1	; 0x01
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	a3 01       	movw	r20, r6
    1134:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <__ultoa_invert>
    1138:	c8 2e       	mov	r12, r24
    113a:	c6 18       	sub	r12, r6
    113c:	0f 77       	andi	r16, 0x7F	; 127
    113e:	90 2e       	mov	r9, r16
    1140:	96 fe       	sbrs	r9, 6
    1142:	0b c0       	rjmp	.+22     	; 0x115a <vfprintf+0x594>
    1144:	09 2d       	mov	r16, r9
    1146:	0e 7f       	andi	r16, 0xFE	; 254
    1148:	c1 16       	cp	r12, r17
    114a:	50 f4       	brcc	.+20     	; 0x1160 <vfprintf+0x59a>
    114c:	94 fe       	sbrs	r9, 4
    114e:	0a c0       	rjmp	.+20     	; 0x1164 <vfprintf+0x59e>
    1150:	92 fc       	sbrc	r9, 2
    1152:	08 c0       	rjmp	.+16     	; 0x1164 <vfprintf+0x59e>
    1154:	09 2d       	mov	r16, r9
    1156:	0e 7e       	andi	r16, 0xEE	; 238
    1158:	05 c0       	rjmp	.+10     	; 0x1164 <vfprintf+0x59e>
    115a:	dc 2c       	mov	r13, r12
    115c:	09 2d       	mov	r16, r9
    115e:	03 c0       	rjmp	.+6      	; 0x1166 <vfprintf+0x5a0>
    1160:	dc 2c       	mov	r13, r12
    1162:	01 c0       	rjmp	.+2      	; 0x1166 <vfprintf+0x5a0>
    1164:	d1 2e       	mov	r13, r17
    1166:	04 ff       	sbrs	r16, 4
    1168:	0d c0       	rjmp	.+26     	; 0x1184 <vfprintf+0x5be>
    116a:	fe 01       	movw	r30, r28
    116c:	ec 0d       	add	r30, r12
    116e:	f1 1d       	adc	r31, r1
    1170:	80 81       	ld	r24, Z
    1172:	80 33       	cpi	r24, 0x30	; 48
    1174:	11 f4       	brne	.+4      	; 0x117a <vfprintf+0x5b4>
    1176:	09 7e       	andi	r16, 0xE9	; 233
    1178:	09 c0       	rjmp	.+18     	; 0x118c <vfprintf+0x5c6>
    117a:	02 ff       	sbrs	r16, 2
    117c:	06 c0       	rjmp	.+12     	; 0x118a <vfprintf+0x5c4>
    117e:	d3 94       	inc	r13
    1180:	d3 94       	inc	r13
    1182:	04 c0       	rjmp	.+8      	; 0x118c <vfprintf+0x5c6>
    1184:	80 2f       	mov	r24, r16
    1186:	86 78       	andi	r24, 0x86	; 134
    1188:	09 f0       	breq	.+2      	; 0x118c <vfprintf+0x5c6>
    118a:	d3 94       	inc	r13
    118c:	03 fd       	sbrc	r16, 3
    118e:	11 c0       	rjmp	.+34     	; 0x11b2 <vfprintf+0x5ec>
    1190:	00 ff       	sbrs	r16, 0
    1192:	06 c0       	rjmp	.+12     	; 0x11a0 <vfprintf+0x5da>
    1194:	1c 2d       	mov	r17, r12
    1196:	d5 14       	cp	r13, r5
    1198:	80 f4       	brcc	.+32     	; 0x11ba <vfprintf+0x5f4>
    119a:	15 0d       	add	r17, r5
    119c:	1d 19       	sub	r17, r13
    119e:	0d c0       	rjmp	.+26     	; 0x11ba <vfprintf+0x5f4>
    11a0:	d5 14       	cp	r13, r5
    11a2:	58 f4       	brcc	.+22     	; 0x11ba <vfprintf+0x5f4>
    11a4:	b7 01       	movw	r22, r14
    11a6:	80 e2       	ldi	r24, 0x20	; 32
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    11ae:	d3 94       	inc	r13
    11b0:	f7 cf       	rjmp	.-18     	; 0x11a0 <vfprintf+0x5da>
    11b2:	d5 14       	cp	r13, r5
    11b4:	10 f4       	brcc	.+4      	; 0x11ba <vfprintf+0x5f4>
    11b6:	5d 18       	sub	r5, r13
    11b8:	01 c0       	rjmp	.+2      	; 0x11bc <vfprintf+0x5f6>
    11ba:	51 2c       	mov	r5, r1
    11bc:	04 ff       	sbrs	r16, 4
    11be:	10 c0       	rjmp	.+32     	; 0x11e0 <vfprintf+0x61a>
    11c0:	b7 01       	movw	r22, r14
    11c2:	80 e3       	ldi	r24, 0x30	; 48
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    11ca:	02 ff       	sbrs	r16, 2
    11cc:	17 c0       	rjmp	.+46     	; 0x11fc <vfprintf+0x636>
    11ce:	01 fd       	sbrc	r16, 1
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <vfprintf+0x612>
    11d2:	88 e7       	ldi	r24, 0x78	; 120
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 c0       	rjmp	.+4      	; 0x11dc <vfprintf+0x616>
    11d8:	88 e5       	ldi	r24, 0x58	; 88
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	b7 01       	movw	r22, r14
    11de:	0c c0       	rjmp	.+24     	; 0x11f8 <vfprintf+0x632>
    11e0:	80 2f       	mov	r24, r16
    11e2:	86 78       	andi	r24, 0x86	; 134
    11e4:	59 f0       	breq	.+22     	; 0x11fc <vfprintf+0x636>
    11e6:	01 ff       	sbrs	r16, 1
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <vfprintf+0x628>
    11ea:	8b e2       	ldi	r24, 0x2B	; 43
    11ec:	01 c0       	rjmp	.+2      	; 0x11f0 <vfprintf+0x62a>
    11ee:	80 e2       	ldi	r24, 0x20	; 32
    11f0:	07 fd       	sbrc	r16, 7
    11f2:	8d e2       	ldi	r24, 0x2D	; 45
    11f4:	b7 01       	movw	r22, r14
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    11fc:	c1 16       	cp	r12, r17
    11fe:	38 f4       	brcc	.+14     	; 0x120e <vfprintf+0x648>
    1200:	b7 01       	movw	r22, r14
    1202:	80 e3       	ldi	r24, 0x30	; 48
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    120a:	11 50       	subi	r17, 0x01	; 1
    120c:	f7 cf       	rjmp	.-18     	; 0x11fc <vfprintf+0x636>
    120e:	ca 94       	dec	r12
    1210:	f3 01       	movw	r30, r6
    1212:	ec 0d       	add	r30, r12
    1214:	f1 1d       	adc	r31, r1
    1216:	80 81       	ld	r24, Z
    1218:	b7 01       	movw	r22, r14
    121a:	90 e0       	ldi	r25, 0x00	; 0
    121c:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    1220:	c1 10       	cpse	r12, r1
    1222:	f5 cf       	rjmp	.-22     	; 0x120e <vfprintf+0x648>
    1224:	15 c0       	rjmp	.+42     	; 0x1250 <vfprintf+0x68a>
    1226:	f4 e0       	ldi	r31, 0x04	; 4
    1228:	f5 15       	cp	r31, r5
    122a:	60 f5       	brcc	.+88     	; 0x1284 <vfprintf+0x6be>
    122c:	84 e0       	ldi	r24, 0x04	; 4
    122e:	58 1a       	sub	r5, r24
    1230:	93 fe       	sbrs	r9, 3
    1232:	1f c0       	rjmp	.+62     	; 0x1272 <vfprintf+0x6ac>
    1234:	01 11       	cpse	r16, r1
    1236:	27 c0       	rjmp	.+78     	; 0x1286 <vfprintf+0x6c0>
    1238:	2c 85       	ldd	r18, Y+12	; 0x0c
    123a:	23 ff       	sbrs	r18, 3
    123c:	2a c0       	rjmp	.+84     	; 0x1292 <vfprintf+0x6cc>
    123e:	08 e6       	ldi	r16, 0x68	; 104
    1240:	10 e0       	ldi	r17, 0x00	; 0
    1242:	39 2d       	mov	r19, r9
    1244:	30 71       	andi	r19, 0x10	; 16
    1246:	93 2e       	mov	r9, r19
    1248:	f8 01       	movw	r30, r16
    124a:	84 91       	lpm	r24, Z
    124c:	81 11       	cpse	r24, r1
    124e:	24 c0       	rjmp	.+72     	; 0x1298 <vfprintf+0x6d2>
    1250:	55 20       	and	r5, r5
    1252:	09 f4       	brne	.+2      	; 0x1256 <vfprintf+0x690>
    1254:	e4 cc       	rjmp	.-1592   	; 0xc1e <vfprintf+0x58>
    1256:	b7 01       	movw	r22, r14
    1258:	80 e2       	ldi	r24, 0x20	; 32
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    1260:	5a 94       	dec	r5
    1262:	f6 cf       	rjmp	.-20     	; 0x1250 <vfprintf+0x68a>
    1264:	f7 01       	movw	r30, r14
    1266:	86 81       	ldd	r24, Z+6	; 0x06
    1268:	97 81       	ldd	r25, Z+7	; 0x07
    126a:	26 c0       	rjmp	.+76     	; 0x12b8 <vfprintf+0x6f2>
    126c:	8f ef       	ldi	r24, 0xFF	; 255
    126e:	9f ef       	ldi	r25, 0xFF	; 255
    1270:	23 c0       	rjmp	.+70     	; 0x12b8 <vfprintf+0x6f2>
    1272:	b7 01       	movw	r22, r14
    1274:	80 e2       	ldi	r24, 0x20	; 32
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    127c:	5a 94       	dec	r5
    127e:	51 10       	cpse	r5, r1
    1280:	f8 cf       	rjmp	.-16     	; 0x1272 <vfprintf+0x6ac>
    1282:	d8 cf       	rjmp	.-80     	; 0x1234 <vfprintf+0x66e>
    1284:	51 2c       	mov	r5, r1
    1286:	b7 01       	movw	r22, r14
    1288:	80 2f       	mov	r24, r16
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    1290:	d3 cf       	rjmp	.-90     	; 0x1238 <vfprintf+0x672>
    1292:	0c e6       	ldi	r16, 0x6C	; 108
    1294:	10 e0       	ldi	r17, 0x00	; 0
    1296:	d5 cf       	rjmp	.-86     	; 0x1242 <vfprintf+0x67c>
    1298:	91 10       	cpse	r9, r1
    129a:	80 52       	subi	r24, 0x20	; 32
    129c:	b7 01       	movw	r22, r14
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <fputc>
    12a4:	0f 5f       	subi	r16, 0xFF	; 255
    12a6:	1f 4f       	sbci	r17, 0xFF	; 255
    12a8:	cf cf       	rjmp	.-98     	; 0x1248 <vfprintf+0x682>
    12aa:	23 e0       	ldi	r18, 0x03	; 3
    12ac:	25 15       	cp	r18, r5
    12ae:	10 f4       	brcc	.+4      	; 0x12b4 <vfprintf+0x6ee>
    12b0:	83 e0       	ldi	r24, 0x03	; 3
    12b2:	bd cf       	rjmp	.-134    	; 0x122e <vfprintf+0x668>
    12b4:	51 2c       	mov	r5, r1
    12b6:	c0 cf       	rjmp	.-128    	; 0x1238 <vfprintf+0x672>
    12b8:	60 96       	adiw	r28, 0x10	; 16
    12ba:	e2 e1       	ldi	r30, 0x12	; 18
    12bc:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__epilogue_restores__>

000012c0 <__divmodhi4>:
    12c0:	97 fb       	bst	r25, 7
    12c2:	07 2e       	mov	r0, r23
    12c4:	16 f4       	brtc	.+4      	; 0x12ca <__divmodhi4+0xa>
    12c6:	00 94       	com	r0
    12c8:	07 d0       	rcall	.+14     	; 0x12d8 <__divmodhi4_neg1>
    12ca:	77 fd       	sbrc	r23, 7
    12cc:	09 d0       	rcall	.+18     	; 0x12e0 <__divmodhi4_neg2>
    12ce:	0e 94 ab 09 	call	0x1356	; 0x1356 <__udivmodhi4>
    12d2:	07 fc       	sbrc	r0, 7
    12d4:	05 d0       	rcall	.+10     	; 0x12e0 <__divmodhi4_neg2>
    12d6:	3e f4       	brtc	.+14     	; 0x12e6 <__divmodhi4_exit>

000012d8 <__divmodhi4_neg1>:
    12d8:	90 95       	com	r25
    12da:	81 95       	neg	r24
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	08 95       	ret

000012e0 <__divmodhi4_neg2>:
    12e0:	70 95       	com	r23
    12e2:	61 95       	neg	r22
    12e4:	7f 4f       	sbci	r23, 0xFF	; 255

000012e6 <__divmodhi4_exit>:
    12e6:	08 95       	ret

000012e8 <__prologue_saves__>:
    12e8:	2f 92       	push	r2
    12ea:	3f 92       	push	r3
    12ec:	4f 92       	push	r4
    12ee:	5f 92       	push	r5
    12f0:	6f 92       	push	r6
    12f2:	7f 92       	push	r7
    12f4:	8f 92       	push	r8
    12f6:	9f 92       	push	r9
    12f8:	af 92       	push	r10
    12fa:	bf 92       	push	r11
    12fc:	cf 92       	push	r12
    12fe:	df 92       	push	r13
    1300:	ef 92       	push	r14
    1302:	ff 92       	push	r15
    1304:	0f 93       	push	r16
    1306:	1f 93       	push	r17
    1308:	cf 93       	push	r28
    130a:	df 93       	push	r29
    130c:	cd b7       	in	r28, 0x3d	; 61
    130e:	de b7       	in	r29, 0x3e	; 62
    1310:	ca 1b       	sub	r28, r26
    1312:	db 0b       	sbc	r29, r27
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	de bf       	out	0x3e, r29	; 62
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	cd bf       	out	0x3d, r28	; 61
    131e:	09 94       	ijmp

00001320 <__epilogue_restores__>:
    1320:	2a 88       	ldd	r2, Y+18	; 0x12
    1322:	39 88       	ldd	r3, Y+17	; 0x11
    1324:	48 88       	ldd	r4, Y+16	; 0x10
    1326:	5f 84       	ldd	r5, Y+15	; 0x0f
    1328:	6e 84       	ldd	r6, Y+14	; 0x0e
    132a:	7d 84       	ldd	r7, Y+13	; 0x0d
    132c:	8c 84       	ldd	r8, Y+12	; 0x0c
    132e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1330:	aa 84       	ldd	r10, Y+10	; 0x0a
    1332:	b9 84       	ldd	r11, Y+9	; 0x09
    1334:	c8 84       	ldd	r12, Y+8	; 0x08
    1336:	df 80       	ldd	r13, Y+7	; 0x07
    1338:	ee 80       	ldd	r14, Y+6	; 0x06
    133a:	fd 80       	ldd	r15, Y+5	; 0x05
    133c:	0c 81       	ldd	r16, Y+4	; 0x04
    133e:	1b 81       	ldd	r17, Y+3	; 0x03
    1340:	aa 81       	ldd	r26, Y+2	; 0x02
    1342:	b9 81       	ldd	r27, Y+1	; 0x01
    1344:	ce 0f       	add	r28, r30
    1346:	d1 1d       	adc	r29, r1
    1348:	0f b6       	in	r0, 0x3f	; 63
    134a:	f8 94       	cli
    134c:	de bf       	out	0x3e, r29	; 62
    134e:	0f be       	out	0x3f, r0	; 63
    1350:	cd bf       	out	0x3d, r28	; 61
    1352:	ed 01       	movw	r28, r26
    1354:	08 95       	ret

00001356 <__udivmodhi4>:
    1356:	aa 1b       	sub	r26, r26
    1358:	bb 1b       	sub	r27, r27
    135a:	51 e1       	ldi	r21, 0x11	; 17
    135c:	07 c0       	rjmp	.+14     	; 0x136c <__udivmodhi4_ep>

0000135e <__udivmodhi4_loop>:
    135e:	aa 1f       	adc	r26, r26
    1360:	bb 1f       	adc	r27, r27
    1362:	a6 17       	cp	r26, r22
    1364:	b7 07       	cpc	r27, r23
    1366:	10 f0       	brcs	.+4      	; 0x136c <__udivmodhi4_ep>
    1368:	a6 1b       	sub	r26, r22
    136a:	b7 0b       	sbc	r27, r23

0000136c <__udivmodhi4_ep>:
    136c:	88 1f       	adc	r24, r24
    136e:	99 1f       	adc	r25, r25
    1370:	5a 95       	dec	r21
    1372:	a9 f7       	brne	.-22     	; 0x135e <__udivmodhi4_loop>
    1374:	80 95       	com	r24
    1376:	90 95       	com	r25
    1378:	bc 01       	movw	r22, r24
    137a:	cd 01       	movw	r24, r26
    137c:	08 95       	ret

0000137e <__ftoa_engine>:
    137e:	28 30       	cpi	r18, 0x08	; 8
    1380:	08 f0       	brcs	.+2      	; 0x1384 <__ftoa_engine+0x6>
    1382:	27 e0       	ldi	r18, 0x07	; 7
    1384:	33 27       	eor	r19, r19
    1386:	da 01       	movw	r26, r20
    1388:	99 0f       	add	r25, r25
    138a:	31 1d       	adc	r19, r1
    138c:	87 fd       	sbrc	r24, 7
    138e:	91 60       	ori	r25, 0x01	; 1
    1390:	00 96       	adiw	r24, 0x00	; 0
    1392:	61 05       	cpc	r22, r1
    1394:	71 05       	cpc	r23, r1
    1396:	39 f4       	brne	.+14     	; 0x13a6 <__ftoa_engine+0x28>
    1398:	32 60       	ori	r19, 0x02	; 2
    139a:	2e 5f       	subi	r18, 0xFE	; 254
    139c:	3d 93       	st	X+, r19
    139e:	30 e3       	ldi	r19, 0x30	; 48
    13a0:	2a 95       	dec	r18
    13a2:	e1 f7       	brne	.-8      	; 0x139c <__ftoa_engine+0x1e>
    13a4:	08 95       	ret
    13a6:	9f 3f       	cpi	r25, 0xFF	; 255
    13a8:	30 f0       	brcs	.+12     	; 0x13b6 <__ftoa_engine+0x38>
    13aa:	80 38       	cpi	r24, 0x80	; 128
    13ac:	71 05       	cpc	r23, r1
    13ae:	61 05       	cpc	r22, r1
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <__ftoa_engine+0x36>
    13b2:	3c 5f       	subi	r19, 0xFC	; 252
    13b4:	3c 5f       	subi	r19, 0xFC	; 252
    13b6:	3d 93       	st	X+, r19
    13b8:	91 30       	cpi	r25, 0x01	; 1
    13ba:	08 f0       	brcs	.+2      	; 0x13be <__ftoa_engine+0x40>
    13bc:	80 68       	ori	r24, 0x80	; 128
    13be:	91 1d       	adc	r25, r1
    13c0:	df 93       	push	r29
    13c2:	cf 93       	push	r28
    13c4:	1f 93       	push	r17
    13c6:	0f 93       	push	r16
    13c8:	ff 92       	push	r15
    13ca:	ef 92       	push	r14
    13cc:	19 2f       	mov	r17, r25
    13ce:	98 7f       	andi	r25, 0xF8	; 248
    13d0:	96 95       	lsr	r25
    13d2:	e9 2f       	mov	r30, r25
    13d4:	96 95       	lsr	r25
    13d6:	96 95       	lsr	r25
    13d8:	e9 0f       	add	r30, r25
    13da:	ff 27       	eor	r31, r31
    13dc:	e6 53       	subi	r30, 0x36	; 54
    13de:	ff 4f       	sbci	r31, 0xFF	; 255
    13e0:	99 27       	eor	r25, r25
    13e2:	33 27       	eor	r19, r19
    13e4:	ee 24       	eor	r14, r14
    13e6:	ff 24       	eor	r15, r15
    13e8:	a7 01       	movw	r20, r14
    13ea:	e7 01       	movw	r28, r14
    13ec:	05 90       	lpm	r0, Z+
    13ee:	08 94       	sec
    13f0:	07 94       	ror	r0
    13f2:	28 f4       	brcc	.+10     	; 0x13fe <__ftoa_engine+0x80>
    13f4:	36 0f       	add	r19, r22
    13f6:	e7 1e       	adc	r14, r23
    13f8:	f8 1e       	adc	r15, r24
    13fa:	49 1f       	adc	r20, r25
    13fc:	51 1d       	adc	r21, r1
    13fe:	66 0f       	add	r22, r22
    1400:	77 1f       	adc	r23, r23
    1402:	88 1f       	adc	r24, r24
    1404:	99 1f       	adc	r25, r25
    1406:	06 94       	lsr	r0
    1408:	a1 f7       	brne	.-24     	; 0x13f2 <__ftoa_engine+0x74>
    140a:	05 90       	lpm	r0, Z+
    140c:	07 94       	ror	r0
    140e:	28 f4       	brcc	.+10     	; 0x141a <__ftoa_engine+0x9c>
    1410:	e7 0e       	add	r14, r23
    1412:	f8 1e       	adc	r15, r24
    1414:	49 1f       	adc	r20, r25
    1416:	56 1f       	adc	r21, r22
    1418:	c1 1d       	adc	r28, r1
    141a:	77 0f       	add	r23, r23
    141c:	88 1f       	adc	r24, r24
    141e:	99 1f       	adc	r25, r25
    1420:	66 1f       	adc	r22, r22
    1422:	06 94       	lsr	r0
    1424:	a1 f7       	brne	.-24     	; 0x140e <__ftoa_engine+0x90>
    1426:	05 90       	lpm	r0, Z+
    1428:	07 94       	ror	r0
    142a:	28 f4       	brcc	.+10     	; 0x1436 <__ftoa_engine+0xb8>
    142c:	f8 0e       	add	r15, r24
    142e:	49 1f       	adc	r20, r25
    1430:	56 1f       	adc	r21, r22
    1432:	c7 1f       	adc	r28, r23
    1434:	d1 1d       	adc	r29, r1
    1436:	88 0f       	add	r24, r24
    1438:	99 1f       	adc	r25, r25
    143a:	66 1f       	adc	r22, r22
    143c:	77 1f       	adc	r23, r23
    143e:	06 94       	lsr	r0
    1440:	a1 f7       	brne	.-24     	; 0x142a <__ftoa_engine+0xac>
    1442:	05 90       	lpm	r0, Z+
    1444:	07 94       	ror	r0
    1446:	20 f4       	brcc	.+8      	; 0x1450 <__ftoa_engine+0xd2>
    1448:	49 0f       	add	r20, r25
    144a:	56 1f       	adc	r21, r22
    144c:	c7 1f       	adc	r28, r23
    144e:	d8 1f       	adc	r29, r24
    1450:	99 0f       	add	r25, r25
    1452:	66 1f       	adc	r22, r22
    1454:	77 1f       	adc	r23, r23
    1456:	88 1f       	adc	r24, r24
    1458:	06 94       	lsr	r0
    145a:	a9 f7       	brne	.-22     	; 0x1446 <__ftoa_engine+0xc8>
    145c:	84 91       	lpm	r24, Z
    145e:	10 95       	com	r17
    1460:	17 70       	andi	r17, 0x07	; 7
    1462:	41 f0       	breq	.+16     	; 0x1474 <__ftoa_engine+0xf6>
    1464:	d6 95       	lsr	r29
    1466:	c7 95       	ror	r28
    1468:	57 95       	ror	r21
    146a:	47 95       	ror	r20
    146c:	f7 94       	ror	r15
    146e:	e7 94       	ror	r14
    1470:	1a 95       	dec	r17
    1472:	c1 f7       	brne	.-16     	; 0x1464 <__ftoa_engine+0xe6>
    1474:	e0 e7       	ldi	r30, 0x70	; 112
    1476:	f0 e0       	ldi	r31, 0x00	; 0
    1478:	68 94       	set
    147a:	15 90       	lpm	r1, Z+
    147c:	15 91       	lpm	r17, Z+
    147e:	35 91       	lpm	r19, Z+
    1480:	65 91       	lpm	r22, Z+
    1482:	95 91       	lpm	r25, Z+
    1484:	05 90       	lpm	r0, Z+
    1486:	7f e2       	ldi	r23, 0x2F	; 47
    1488:	73 95       	inc	r23
    148a:	e1 18       	sub	r14, r1
    148c:	f1 0a       	sbc	r15, r17
    148e:	43 0b       	sbc	r20, r19
    1490:	56 0b       	sbc	r21, r22
    1492:	c9 0b       	sbc	r28, r25
    1494:	d0 09       	sbc	r29, r0
    1496:	c0 f7       	brcc	.-16     	; 0x1488 <__ftoa_engine+0x10a>
    1498:	e1 0c       	add	r14, r1
    149a:	f1 1e       	adc	r15, r17
    149c:	43 1f       	adc	r20, r19
    149e:	56 1f       	adc	r21, r22
    14a0:	c9 1f       	adc	r28, r25
    14a2:	d0 1d       	adc	r29, r0
    14a4:	7e f4       	brtc	.+30     	; 0x14c4 <__ftoa_engine+0x146>
    14a6:	70 33       	cpi	r23, 0x30	; 48
    14a8:	11 f4       	brne	.+4      	; 0x14ae <__ftoa_engine+0x130>
    14aa:	8a 95       	dec	r24
    14ac:	e6 cf       	rjmp	.-52     	; 0x147a <__ftoa_engine+0xfc>
    14ae:	e8 94       	clt
    14b0:	01 50       	subi	r16, 0x01	; 1
    14b2:	30 f0       	brcs	.+12     	; 0x14c0 <__ftoa_engine+0x142>
    14b4:	08 0f       	add	r16, r24
    14b6:	0a f4       	brpl	.+2      	; 0x14ba <__ftoa_engine+0x13c>
    14b8:	00 27       	eor	r16, r16
    14ba:	02 17       	cp	r16, r18
    14bc:	08 f4       	brcc	.+2      	; 0x14c0 <__ftoa_engine+0x142>
    14be:	20 2f       	mov	r18, r16
    14c0:	23 95       	inc	r18
    14c2:	02 2f       	mov	r16, r18
    14c4:	7a 33       	cpi	r23, 0x3A	; 58
    14c6:	28 f0       	brcs	.+10     	; 0x14d2 <__ftoa_engine+0x154>
    14c8:	79 e3       	ldi	r23, 0x39	; 57
    14ca:	7d 93       	st	X+, r23
    14cc:	2a 95       	dec	r18
    14ce:	e9 f7       	brne	.-6      	; 0x14ca <__ftoa_engine+0x14c>
    14d0:	10 c0       	rjmp	.+32     	; 0x14f2 <__ftoa_engine+0x174>
    14d2:	7d 93       	st	X+, r23
    14d4:	2a 95       	dec	r18
    14d6:	89 f6       	brne	.-94     	; 0x147a <__ftoa_engine+0xfc>
    14d8:	06 94       	lsr	r0
    14da:	97 95       	ror	r25
    14dc:	67 95       	ror	r22
    14de:	37 95       	ror	r19
    14e0:	17 95       	ror	r17
    14e2:	17 94       	ror	r1
    14e4:	e1 18       	sub	r14, r1
    14e6:	f1 0a       	sbc	r15, r17
    14e8:	43 0b       	sbc	r20, r19
    14ea:	56 0b       	sbc	r21, r22
    14ec:	c9 0b       	sbc	r28, r25
    14ee:	d0 09       	sbc	r29, r0
    14f0:	98 f0       	brcs	.+38     	; 0x1518 <__ftoa_engine+0x19a>
    14f2:	23 95       	inc	r18
    14f4:	7e 91       	ld	r23, -X
    14f6:	73 95       	inc	r23
    14f8:	7a 33       	cpi	r23, 0x3A	; 58
    14fa:	08 f0       	brcs	.+2      	; 0x14fe <__ftoa_engine+0x180>
    14fc:	70 e3       	ldi	r23, 0x30	; 48
    14fe:	7c 93       	st	X, r23
    1500:	20 13       	cpse	r18, r16
    1502:	b8 f7       	brcc	.-18     	; 0x14f2 <__ftoa_engine+0x174>
    1504:	7e 91       	ld	r23, -X
    1506:	70 61       	ori	r23, 0x10	; 16
    1508:	7d 93       	st	X+, r23
    150a:	30 f0       	brcs	.+12     	; 0x1518 <__ftoa_engine+0x19a>
    150c:	83 95       	inc	r24
    150e:	71 e3       	ldi	r23, 0x31	; 49
    1510:	7d 93       	st	X+, r23
    1512:	70 e3       	ldi	r23, 0x30	; 48
    1514:	2a 95       	dec	r18
    1516:	e1 f7       	brne	.-8      	; 0x1510 <__ftoa_engine+0x192>
    1518:	11 24       	eor	r1, r1
    151a:	ef 90       	pop	r14
    151c:	ff 90       	pop	r15
    151e:	0f 91       	pop	r16
    1520:	1f 91       	pop	r17
    1522:	cf 91       	pop	r28
    1524:	df 91       	pop	r29
    1526:	99 27       	eor	r25, r25
    1528:	87 fd       	sbrc	r24, 7
    152a:	90 95       	com	r25
    152c:	08 95       	ret

0000152e <strnlen_P>:
    152e:	fc 01       	movw	r30, r24
    1530:	05 90       	lpm	r0, Z+
    1532:	61 50       	subi	r22, 0x01	; 1
    1534:	70 40       	sbci	r23, 0x00	; 0
    1536:	01 10       	cpse	r0, r1
    1538:	d8 f7       	brcc	.-10     	; 0x1530 <strnlen_P+0x2>
    153a:	80 95       	com	r24
    153c:	90 95       	com	r25
    153e:	8e 0f       	add	r24, r30
    1540:	9f 1f       	adc	r25, r31
    1542:	08 95       	ret

00001544 <strtok>:
    1544:	44 e1       	ldi	r20, 0x14	; 20
    1546:	54 e0       	ldi	r21, 0x04	; 4
    1548:	0e 94 b2 0a 	call	0x1564	; 0x1564 <strtok_r>
    154c:	08 95       	ret

0000154e <strnlen>:
    154e:	fc 01       	movw	r30, r24
    1550:	61 50       	subi	r22, 0x01	; 1
    1552:	70 40       	sbci	r23, 0x00	; 0
    1554:	01 90       	ld	r0, Z+
    1556:	01 10       	cpse	r0, r1
    1558:	d8 f7       	brcc	.-10     	; 0x1550 <strnlen+0x2>
    155a:	80 95       	com	r24
    155c:	90 95       	com	r25
    155e:	8e 0f       	add	r24, r30
    1560:	9f 1f       	adc	r25, r31
    1562:	08 95       	ret

00001564 <strtok_r>:
    1564:	fa 01       	movw	r30, r20
    1566:	a1 91       	ld	r26, Z+
    1568:	b0 81       	ld	r27, Z
    156a:	00 97       	sbiw	r24, 0x00	; 0
    156c:	19 f4       	brne	.+6      	; 0x1574 <strtok_r+0x10>
    156e:	10 97       	sbiw	r26, 0x00	; 0
    1570:	e1 f0       	breq	.+56     	; 0x15aa <strtok_r+0x46>
    1572:	cd 01       	movw	r24, r26
    1574:	dc 01       	movw	r26, r24
    1576:	cd 01       	movw	r24, r26
    1578:	0d 90       	ld	r0, X+
    157a:	00 20       	and	r0, r0
    157c:	11 f4       	brne	.+4      	; 0x1582 <strtok_r+0x1e>
    157e:	c0 01       	movw	r24, r0
    1580:	13 c0       	rjmp	.+38     	; 0x15a8 <strtok_r+0x44>
    1582:	fb 01       	movw	r30, r22
    1584:	21 91       	ld	r18, Z+
    1586:	22 23       	and	r18, r18
    1588:	19 f0       	breq	.+6      	; 0x1590 <strtok_r+0x2c>
    158a:	20 15       	cp	r18, r0
    158c:	d9 f7       	brne	.-10     	; 0x1584 <strtok_r+0x20>
    158e:	f3 cf       	rjmp	.-26     	; 0x1576 <strtok_r+0x12>
    1590:	fb 01       	movw	r30, r22
    1592:	21 91       	ld	r18, Z+
    1594:	20 15       	cp	r18, r0
    1596:	19 f4       	brne	.+6      	; 0x159e <strtok_r+0x3a>
    1598:	1e 92       	st	-X, r1
    159a:	11 96       	adiw	r26, 0x01	; 1
    159c:	06 c0       	rjmp	.+12     	; 0x15aa <strtok_r+0x46>
    159e:	22 23       	and	r18, r18
    15a0:	c1 f7       	brne	.-16     	; 0x1592 <strtok_r+0x2e>
    15a2:	0d 90       	ld	r0, X+
    15a4:	00 20       	and	r0, r0
    15a6:	a1 f7       	brne	.-24     	; 0x1590 <strtok_r+0x2c>
    15a8:	d0 01       	movw	r26, r0
    15aa:	fa 01       	movw	r30, r20
    15ac:	a1 93       	st	Z+, r26
    15ae:	b0 83       	st	Z, r27
    15b0:	08 95       	ret

000015b2 <fputc>:
    15b2:	0f 93       	push	r16
    15b4:	1f 93       	push	r17
    15b6:	cf 93       	push	r28
    15b8:	df 93       	push	r29
    15ba:	fb 01       	movw	r30, r22
    15bc:	23 81       	ldd	r18, Z+3	; 0x03
    15be:	21 fd       	sbrc	r18, 1
    15c0:	03 c0       	rjmp	.+6      	; 0x15c8 <fputc+0x16>
    15c2:	8f ef       	ldi	r24, 0xFF	; 255
    15c4:	9f ef       	ldi	r25, 0xFF	; 255
    15c6:	2c c0       	rjmp	.+88     	; 0x1620 <fputc+0x6e>
    15c8:	22 ff       	sbrs	r18, 2
    15ca:	16 c0       	rjmp	.+44     	; 0x15f8 <fputc+0x46>
    15cc:	46 81       	ldd	r20, Z+6	; 0x06
    15ce:	57 81       	ldd	r21, Z+7	; 0x07
    15d0:	24 81       	ldd	r18, Z+4	; 0x04
    15d2:	35 81       	ldd	r19, Z+5	; 0x05
    15d4:	42 17       	cp	r20, r18
    15d6:	53 07       	cpc	r21, r19
    15d8:	44 f4       	brge	.+16     	; 0x15ea <fputc+0x38>
    15da:	a0 81       	ld	r26, Z
    15dc:	b1 81       	ldd	r27, Z+1	; 0x01
    15de:	9d 01       	movw	r18, r26
    15e0:	2f 5f       	subi	r18, 0xFF	; 255
    15e2:	3f 4f       	sbci	r19, 0xFF	; 255
    15e4:	31 83       	std	Z+1, r19	; 0x01
    15e6:	20 83       	st	Z, r18
    15e8:	8c 93       	st	X, r24
    15ea:	26 81       	ldd	r18, Z+6	; 0x06
    15ec:	37 81       	ldd	r19, Z+7	; 0x07
    15ee:	2f 5f       	subi	r18, 0xFF	; 255
    15f0:	3f 4f       	sbci	r19, 0xFF	; 255
    15f2:	37 83       	std	Z+7, r19	; 0x07
    15f4:	26 83       	std	Z+6, r18	; 0x06
    15f6:	14 c0       	rjmp	.+40     	; 0x1620 <fputc+0x6e>
    15f8:	8b 01       	movw	r16, r22
    15fa:	ec 01       	movw	r28, r24
    15fc:	fb 01       	movw	r30, r22
    15fe:	00 84       	ldd	r0, Z+8	; 0x08
    1600:	f1 85       	ldd	r31, Z+9	; 0x09
    1602:	e0 2d       	mov	r30, r0
    1604:	09 95       	icall
    1606:	89 2b       	or	r24, r25
    1608:	e1 f6       	brne	.-72     	; 0x15c2 <fputc+0x10>
    160a:	d8 01       	movw	r26, r16
    160c:	16 96       	adiw	r26, 0x06	; 6
    160e:	8d 91       	ld	r24, X+
    1610:	9c 91       	ld	r25, X
    1612:	17 97       	sbiw	r26, 0x07	; 7
    1614:	01 96       	adiw	r24, 0x01	; 1
    1616:	17 96       	adiw	r26, 0x07	; 7
    1618:	9c 93       	st	X, r25
    161a:	8e 93       	st	-X, r24
    161c:	16 97       	sbiw	r26, 0x06	; 6
    161e:	ce 01       	movw	r24, r28
    1620:	df 91       	pop	r29
    1622:	cf 91       	pop	r28
    1624:	1f 91       	pop	r17
    1626:	0f 91       	pop	r16
    1628:	08 95       	ret

0000162a <sprintf>:
    162a:	ae e0       	ldi	r26, 0x0E	; 14
    162c:	b0 e0       	ldi	r27, 0x00	; 0
    162e:	eb e1       	ldi	r30, 0x1B	; 27
    1630:	fb e0       	ldi	r31, 0x0B	; 11
    1632:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__prologue_saves__+0x1c>
    1636:	0d 89       	ldd	r16, Y+21	; 0x15
    1638:	1e 89       	ldd	r17, Y+22	; 0x16
    163a:	86 e0       	ldi	r24, 0x06	; 6
    163c:	8c 83       	std	Y+4, r24	; 0x04
    163e:	1a 83       	std	Y+2, r17	; 0x02
    1640:	09 83       	std	Y+1, r16	; 0x01
    1642:	8f ef       	ldi	r24, 0xFF	; 255
    1644:	9f e7       	ldi	r25, 0x7F	; 127
    1646:	9e 83       	std	Y+6, r25	; 0x06
    1648:	8d 83       	std	Y+5, r24	; 0x05
    164a:	ae 01       	movw	r20, r28
    164c:	47 5e       	subi	r20, 0xE7	; 231
    164e:	5f 4f       	sbci	r21, 0xFF	; 255
    1650:	6f 89       	ldd	r22, Y+23	; 0x17
    1652:	78 8d       	ldd	r23, Y+24	; 0x18
    1654:	ce 01       	movw	r24, r28
    1656:	01 96       	adiw	r24, 0x01	; 1
    1658:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <vfprintf>
    165c:	ef 81       	ldd	r30, Y+7	; 0x07
    165e:	f8 85       	ldd	r31, Y+8	; 0x08
    1660:	e0 0f       	add	r30, r16
    1662:	f1 1f       	adc	r31, r17
    1664:	10 82       	st	Z, r1
    1666:	2e 96       	adiw	r28, 0x0e	; 14
    1668:	e4 e0       	ldi	r30, 0x04	; 4
    166a:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__epilogue_restores__+0x1c>

0000166e <sscanf>:
    166e:	ae e0       	ldi	r26, 0x0E	; 14
    1670:	b0 e0       	ldi	r27, 0x00	; 0
    1672:	ed e3       	ldi	r30, 0x3D	; 61
    1674:	fb e0       	ldi	r31, 0x0B	; 11
    1676:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__prologue_saves__+0x20>
    167a:	85 e0       	ldi	r24, 0x05	; 5
    167c:	8c 83       	std	Y+4, r24	; 0x04
    167e:	8b 89       	ldd	r24, Y+19	; 0x13
    1680:	9c 89       	ldd	r25, Y+20	; 0x14
    1682:	9a 83       	std	Y+2, r25	; 0x02
    1684:	89 83       	std	Y+1, r24	; 0x01
    1686:	ae 01       	movw	r20, r28
    1688:	49 5e       	subi	r20, 0xE9	; 233
    168a:	5f 4f       	sbci	r21, 0xFF	; 255
    168c:	6d 89       	ldd	r22, Y+21	; 0x15
    168e:	7e 89       	ldd	r23, Y+22	; 0x16
    1690:	ce 01       	movw	r24, r28
    1692:	01 96       	adiw	r24, 0x01	; 1
    1694:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <vfscanf>
    1698:	2e 96       	adiw	r28, 0x0e	; 14
    169a:	e2 e0       	ldi	r30, 0x02	; 2
    169c:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <__epilogue_restores__+0x20>

000016a0 <__ultoa_invert>:
    16a0:	fa 01       	movw	r30, r20
    16a2:	aa 27       	eor	r26, r26
    16a4:	28 30       	cpi	r18, 0x08	; 8
    16a6:	51 f1       	breq	.+84     	; 0x16fc <__ultoa_invert+0x5c>
    16a8:	20 31       	cpi	r18, 0x10	; 16
    16aa:	81 f1       	breq	.+96     	; 0x170c <__ultoa_invert+0x6c>
    16ac:	e8 94       	clt
    16ae:	6f 93       	push	r22
    16b0:	6e 7f       	andi	r22, 0xFE	; 254
    16b2:	6e 5f       	subi	r22, 0xFE	; 254
    16b4:	7f 4f       	sbci	r23, 0xFF	; 255
    16b6:	8f 4f       	sbci	r24, 0xFF	; 255
    16b8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ba:	af 4f       	sbci	r26, 0xFF	; 255
    16bc:	b1 e0       	ldi	r27, 0x01	; 1
    16be:	3e d0       	rcall	.+124    	; 0x173c <__ultoa_invert+0x9c>
    16c0:	b4 e0       	ldi	r27, 0x04	; 4
    16c2:	3c d0       	rcall	.+120    	; 0x173c <__ultoa_invert+0x9c>
    16c4:	67 0f       	add	r22, r23
    16c6:	78 1f       	adc	r23, r24
    16c8:	89 1f       	adc	r24, r25
    16ca:	9a 1f       	adc	r25, r26
    16cc:	a1 1d       	adc	r26, r1
    16ce:	68 0f       	add	r22, r24
    16d0:	79 1f       	adc	r23, r25
    16d2:	8a 1f       	adc	r24, r26
    16d4:	91 1d       	adc	r25, r1
    16d6:	a1 1d       	adc	r26, r1
    16d8:	6a 0f       	add	r22, r26
    16da:	71 1d       	adc	r23, r1
    16dc:	81 1d       	adc	r24, r1
    16de:	91 1d       	adc	r25, r1
    16e0:	a1 1d       	adc	r26, r1
    16e2:	20 d0       	rcall	.+64     	; 0x1724 <__ultoa_invert+0x84>
    16e4:	09 f4       	brne	.+2      	; 0x16e8 <__ultoa_invert+0x48>
    16e6:	68 94       	set
    16e8:	3f 91       	pop	r19
    16ea:	2a e0       	ldi	r18, 0x0A	; 10
    16ec:	26 9f       	mul	r18, r22
    16ee:	11 24       	eor	r1, r1
    16f0:	30 19       	sub	r19, r0
    16f2:	30 5d       	subi	r19, 0xD0	; 208
    16f4:	31 93       	st	Z+, r19
    16f6:	de f6       	brtc	.-74     	; 0x16ae <__ultoa_invert+0xe>
    16f8:	cf 01       	movw	r24, r30
    16fa:	08 95       	ret
    16fc:	46 2f       	mov	r20, r22
    16fe:	47 70       	andi	r20, 0x07	; 7
    1700:	40 5d       	subi	r20, 0xD0	; 208
    1702:	41 93       	st	Z+, r20
    1704:	b3 e0       	ldi	r27, 0x03	; 3
    1706:	0f d0       	rcall	.+30     	; 0x1726 <__ultoa_invert+0x86>
    1708:	c9 f7       	brne	.-14     	; 0x16fc <__ultoa_invert+0x5c>
    170a:	f6 cf       	rjmp	.-20     	; 0x16f8 <__ultoa_invert+0x58>
    170c:	46 2f       	mov	r20, r22
    170e:	4f 70       	andi	r20, 0x0F	; 15
    1710:	40 5d       	subi	r20, 0xD0	; 208
    1712:	4a 33       	cpi	r20, 0x3A	; 58
    1714:	18 f0       	brcs	.+6      	; 0x171c <__ultoa_invert+0x7c>
    1716:	49 5d       	subi	r20, 0xD9	; 217
    1718:	31 fd       	sbrc	r19, 1
    171a:	40 52       	subi	r20, 0x20	; 32
    171c:	41 93       	st	Z+, r20
    171e:	02 d0       	rcall	.+4      	; 0x1724 <__ultoa_invert+0x84>
    1720:	a9 f7       	brne	.-22     	; 0x170c <__ultoa_invert+0x6c>
    1722:	ea cf       	rjmp	.-44     	; 0x16f8 <__ultoa_invert+0x58>
    1724:	b4 e0       	ldi	r27, 0x04	; 4
    1726:	a6 95       	lsr	r26
    1728:	97 95       	ror	r25
    172a:	87 95       	ror	r24
    172c:	77 95       	ror	r23
    172e:	67 95       	ror	r22
    1730:	ba 95       	dec	r27
    1732:	c9 f7       	brne	.-14     	; 0x1726 <__ultoa_invert+0x86>
    1734:	00 97       	sbiw	r24, 0x00	; 0
    1736:	61 05       	cpc	r22, r1
    1738:	71 05       	cpc	r23, r1
    173a:	08 95       	ret
    173c:	9b 01       	movw	r18, r22
    173e:	ac 01       	movw	r20, r24
    1740:	0a 2e       	mov	r0, r26
    1742:	06 94       	lsr	r0
    1744:	57 95       	ror	r21
    1746:	47 95       	ror	r20
    1748:	37 95       	ror	r19
    174a:	27 95       	ror	r18
    174c:	ba 95       	dec	r27
    174e:	c9 f7       	brne	.-14     	; 0x1742 <__ultoa_invert+0xa2>
    1750:	62 0f       	add	r22, r18
    1752:	73 1f       	adc	r23, r19
    1754:	84 1f       	adc	r24, r20
    1756:	95 1f       	adc	r25, r21
    1758:	a0 1d       	adc	r26, r0
    175a:	08 95       	ret

0000175c <putval>:
    175c:	20 fd       	sbrc	r18, 0
    175e:	09 c0       	rjmp	.+18     	; 0x1772 <putval+0x16>
    1760:	fc 01       	movw	r30, r24
    1762:	23 fd       	sbrc	r18, 3
    1764:	05 c0       	rjmp	.+10     	; 0x1770 <putval+0x14>
    1766:	22 ff       	sbrs	r18, 2
    1768:	02 c0       	rjmp	.+4      	; 0x176e <putval+0x12>
    176a:	73 83       	std	Z+3, r23	; 0x03
    176c:	62 83       	std	Z+2, r22	; 0x02
    176e:	51 83       	std	Z+1, r21	; 0x01
    1770:	40 83       	st	Z, r20
    1772:	08 95       	ret

00001774 <mulacc>:
    1774:	44 fd       	sbrc	r20, 4
    1776:	17 c0       	rjmp	.+46     	; 0x17a6 <mulacc+0x32>
    1778:	46 fd       	sbrc	r20, 6
    177a:	17 c0       	rjmp	.+46     	; 0x17aa <mulacc+0x36>
    177c:	ab 01       	movw	r20, r22
    177e:	bc 01       	movw	r22, r24
    1780:	da 01       	movw	r26, r20
    1782:	fb 01       	movw	r30, r22
    1784:	aa 0f       	add	r26, r26
    1786:	bb 1f       	adc	r27, r27
    1788:	ee 1f       	adc	r30, r30
    178a:	ff 1f       	adc	r31, r31
    178c:	10 94       	com	r1
    178e:	d1 f7       	brne	.-12     	; 0x1784 <mulacc+0x10>
    1790:	4a 0f       	add	r20, r26
    1792:	5b 1f       	adc	r21, r27
    1794:	6e 1f       	adc	r22, r30
    1796:	7f 1f       	adc	r23, r31
    1798:	cb 01       	movw	r24, r22
    179a:	ba 01       	movw	r22, r20
    179c:	66 0f       	add	r22, r22
    179e:	77 1f       	adc	r23, r23
    17a0:	88 1f       	adc	r24, r24
    17a2:	99 1f       	adc	r25, r25
    17a4:	09 c0       	rjmp	.+18     	; 0x17b8 <mulacc+0x44>
    17a6:	33 e0       	ldi	r19, 0x03	; 3
    17a8:	01 c0       	rjmp	.+2      	; 0x17ac <mulacc+0x38>
    17aa:	34 e0       	ldi	r19, 0x04	; 4
    17ac:	66 0f       	add	r22, r22
    17ae:	77 1f       	adc	r23, r23
    17b0:	88 1f       	adc	r24, r24
    17b2:	99 1f       	adc	r25, r25
    17b4:	31 50       	subi	r19, 0x01	; 1
    17b6:	d1 f7       	brne	.-12     	; 0x17ac <mulacc+0x38>
    17b8:	62 0f       	add	r22, r18
    17ba:	71 1d       	adc	r23, r1
    17bc:	81 1d       	adc	r24, r1
    17be:	91 1d       	adc	r25, r1
    17c0:	08 95       	ret

000017c2 <skip_spaces>:
    17c2:	0f 93       	push	r16
    17c4:	1f 93       	push	r17
    17c6:	cf 93       	push	r28
    17c8:	df 93       	push	r29
    17ca:	8c 01       	movw	r16, r24
    17cc:	c8 01       	movw	r24, r16
    17ce:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    17d2:	ec 01       	movw	r28, r24
    17d4:	97 fd       	sbrc	r25, 7
    17d6:	08 c0       	rjmp	.+16     	; 0x17e8 <skip_spaces+0x26>
    17d8:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <isspace>
    17dc:	89 2b       	or	r24, r25
    17de:	b1 f7       	brne	.-20     	; 0x17cc <skip_spaces+0xa>
    17e0:	b8 01       	movw	r22, r16
    17e2:	ce 01       	movw	r24, r28
    17e4:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <ungetc>
    17e8:	ce 01       	movw	r24, r28
    17ea:	df 91       	pop	r29
    17ec:	cf 91       	pop	r28
    17ee:	1f 91       	pop	r17
    17f0:	0f 91       	pop	r16
    17f2:	08 95       	ret

000017f4 <conv_int>:
    17f4:	8f 92       	push	r8
    17f6:	9f 92       	push	r9
    17f8:	af 92       	push	r10
    17fa:	bf 92       	push	r11
    17fc:	ef 92       	push	r14
    17fe:	ff 92       	push	r15
    1800:	0f 93       	push	r16
    1802:	1f 93       	push	r17
    1804:	cf 93       	push	r28
    1806:	df 93       	push	r29
    1808:	8c 01       	movw	r16, r24
    180a:	d6 2f       	mov	r29, r22
    180c:	7a 01       	movw	r14, r20
    180e:	b2 2e       	mov	r11, r18
    1810:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1814:	9c 01       	movw	r18, r24
    1816:	33 27       	eor	r19, r19
    1818:	2b 32       	cpi	r18, 0x2B	; 43
    181a:	31 05       	cpc	r19, r1
    181c:	31 f0       	breq	.+12     	; 0x182a <conv_int+0x36>
    181e:	2d 32       	cpi	r18, 0x2D	; 45
    1820:	31 05       	cpc	r19, r1
    1822:	61 f4       	brne	.+24     	; 0x183c <conv_int+0x48>
    1824:	8b 2d       	mov	r24, r11
    1826:	80 68       	ori	r24, 0x80	; 128
    1828:	b8 2e       	mov	r11, r24
    182a:	d1 50       	subi	r29, 0x01	; 1
    182c:	11 f4       	brne	.+4      	; 0x1832 <conv_int+0x3e>
    182e:	80 e0       	ldi	r24, 0x00	; 0
    1830:	68 c0       	rjmp	.+208    	; 0x1902 <conv_int+0x10e>
    1832:	c8 01       	movw	r24, r16
    1834:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1838:	97 fd       	sbrc	r25, 7
    183a:	f9 cf       	rjmp	.-14     	; 0x182e <conv_int+0x3a>
    183c:	cb 2d       	mov	r28, r11
    183e:	cd 7f       	andi	r28, 0xFD	; 253
    1840:	2b 2d       	mov	r18, r11
    1842:	20 73       	andi	r18, 0x30	; 48
    1844:	09 f5       	brne	.+66     	; 0x1888 <conv_int+0x94>
    1846:	80 33       	cpi	r24, 0x30	; 48
    1848:	f9 f4       	brne	.+62     	; 0x1888 <conv_int+0x94>
    184a:	aa 24       	eor	r10, r10
    184c:	aa 94       	dec	r10
    184e:	ad 0e       	add	r10, r29
    1850:	09 f4       	brne	.+2      	; 0x1854 <conv_int+0x60>
    1852:	43 c0       	rjmp	.+134    	; 0x18da <conv_int+0xe6>
    1854:	c8 01       	movw	r24, r16
    1856:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    185a:	97 fd       	sbrc	r25, 7
    185c:	3e c0       	rjmp	.+124    	; 0x18da <conv_int+0xe6>
    185e:	9c 01       	movw	r18, r24
    1860:	2f 7d       	andi	r18, 0xDF	; 223
    1862:	33 27       	eor	r19, r19
    1864:	28 35       	cpi	r18, 0x58	; 88
    1866:	31 05       	cpc	r19, r1
    1868:	49 f4       	brne	.+18     	; 0x187c <conv_int+0x88>
    186a:	c2 64       	ori	r28, 0x42	; 66
    186c:	d2 50       	subi	r29, 0x02	; 2
    186e:	a9 f1       	breq	.+106    	; 0x18da <conv_int+0xe6>
    1870:	c8 01       	movw	r24, r16
    1872:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1876:	97 ff       	sbrs	r25, 7
    1878:	07 c0       	rjmp	.+14     	; 0x1888 <conv_int+0x94>
    187a:	2f c0       	rjmp	.+94     	; 0x18da <conv_int+0xe6>
    187c:	b6 fe       	sbrs	r11, 6
    187e:	02 c0       	rjmp	.+4      	; 0x1884 <conv_int+0x90>
    1880:	c2 60       	ori	r28, 0x02	; 2
    1882:	01 c0       	rjmp	.+2      	; 0x1886 <conv_int+0x92>
    1884:	c2 61       	ori	r28, 0x12	; 18
    1886:	da 2d       	mov	r29, r10
    1888:	81 2c       	mov	r8, r1
    188a:	91 2c       	mov	r9, r1
    188c:	54 01       	movw	r10, r8
    188e:	20 ed       	ldi	r18, 0xD0	; 208
    1890:	28 0f       	add	r18, r24
    1892:	28 30       	cpi	r18, 0x08	; 8
    1894:	80 f0       	brcs	.+32     	; 0x18b6 <conv_int+0xc2>
    1896:	c4 ff       	sbrs	r28, 4
    1898:	04 c0       	rjmp	.+8      	; 0x18a2 <conv_int+0xae>
    189a:	b8 01       	movw	r22, r16
    189c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <ungetc>
    18a0:	19 c0       	rjmp	.+50     	; 0x18d4 <conv_int+0xe0>
    18a2:	2a 30       	cpi	r18, 0x0A	; 10
    18a4:	40 f0       	brcs	.+16     	; 0x18b6 <conv_int+0xc2>
    18a6:	c6 ff       	sbrs	r28, 6
    18a8:	f8 cf       	rjmp	.-16     	; 0x189a <conv_int+0xa6>
    18aa:	2f 7d       	andi	r18, 0xDF	; 223
    18ac:	3f ee       	ldi	r19, 0xEF	; 239
    18ae:	32 0f       	add	r19, r18
    18b0:	36 30       	cpi	r19, 0x06	; 6
    18b2:	98 f7       	brcc	.-26     	; 0x189a <conv_int+0xa6>
    18b4:	27 50       	subi	r18, 0x07	; 7
    18b6:	4c 2f       	mov	r20, r28
    18b8:	c5 01       	movw	r24, r10
    18ba:	b4 01       	movw	r22, r8
    18bc:	0e 94 ba 0b 	call	0x1774	; 0x1774 <mulacc>
    18c0:	4b 01       	movw	r8, r22
    18c2:	5c 01       	movw	r10, r24
    18c4:	c2 60       	ori	r28, 0x02	; 2
    18c6:	d1 50       	subi	r29, 0x01	; 1
    18c8:	59 f0       	breq	.+22     	; 0x18e0 <conv_int+0xec>
    18ca:	c8 01       	movw	r24, r16
    18cc:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    18d0:	97 ff       	sbrs	r25, 7
    18d2:	dd cf       	rjmp	.-70     	; 0x188e <conv_int+0x9a>
    18d4:	c1 fd       	sbrc	r28, 1
    18d6:	04 c0       	rjmp	.+8      	; 0x18e0 <conv_int+0xec>
    18d8:	aa cf       	rjmp	.-172    	; 0x182e <conv_int+0x3a>
    18da:	81 2c       	mov	r8, r1
    18dc:	91 2c       	mov	r9, r1
    18de:	54 01       	movw	r10, r8
    18e0:	c7 ff       	sbrs	r28, 7
    18e2:	08 c0       	rjmp	.+16     	; 0x18f4 <conv_int+0x100>
    18e4:	b0 94       	com	r11
    18e6:	a0 94       	com	r10
    18e8:	90 94       	com	r9
    18ea:	80 94       	com	r8
    18ec:	81 1c       	adc	r8, r1
    18ee:	91 1c       	adc	r9, r1
    18f0:	a1 1c       	adc	r10, r1
    18f2:	b1 1c       	adc	r11, r1
    18f4:	2c 2f       	mov	r18, r28
    18f6:	b5 01       	movw	r22, r10
    18f8:	a4 01       	movw	r20, r8
    18fa:	c7 01       	movw	r24, r14
    18fc:	0e 94 ae 0b 	call	0x175c	; 0x175c <putval>
    1900:	81 e0       	ldi	r24, 0x01	; 1
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	1f 91       	pop	r17
    1908:	0f 91       	pop	r16
    190a:	ff 90       	pop	r15
    190c:	ef 90       	pop	r14
    190e:	bf 90       	pop	r11
    1910:	af 90       	pop	r10
    1912:	9f 90       	pop	r9
    1914:	8f 90       	pop	r8
    1916:	08 95       	ret

00001918 <conv_brk>:
    1918:	a0 e2       	ldi	r26, 0x20	; 32
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	e2 e9       	ldi	r30, 0x92	; 146
    191e:	fc e0       	ldi	r31, 0x0C	; 12
    1920:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__prologue_saves__+0x6>
    1924:	5c 01       	movw	r10, r24
    1926:	96 2e       	mov	r9, r22
    1928:	7a 01       	movw	r14, r20
    192a:	f9 01       	movw	r30, r18
    192c:	8e 01       	movw	r16, r28
    192e:	0f 5f       	subi	r16, 0xFF	; 255
    1930:	1f 4f       	sbci	r17, 0xFF	; 255
    1932:	68 01       	movw	r12, r16
    1934:	80 e2       	ldi	r24, 0x20	; 32
    1936:	d8 01       	movw	r26, r16
    1938:	1d 92       	st	X+, r1
    193a:	8a 95       	dec	r24
    193c:	e9 f7       	brne	.-6      	; 0x1938 <conv_brk+0x20>
    193e:	d5 01       	movw	r26, r10
    1940:	13 96       	adiw	r26, 0x03	; 3
    1942:	8c 90       	ld	r8, X
    1944:	80 e0       	ldi	r24, 0x00	; 0
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	61 2c       	mov	r6, r1
    194a:	71 2c       	mov	r7, r1
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	61 e0       	ldi	r22, 0x01	; 1
    1950:	70 e0       	ldi	r23, 0x00	; 0
    1952:	83 fc       	sbrc	r8, 3
    1954:	25 91       	lpm	r18, Z+
    1956:	83 fe       	sbrs	r8, 3
    1958:	21 91       	ld	r18, Z+
    195a:	8f 01       	movw	r16, r30
    195c:	52 2e       	mov	r5, r18
    195e:	21 11       	cpse	r18, r1
    1960:	03 c0       	rjmp	.+6      	; 0x1968 <conv_brk+0x50>
    1962:	80 e0       	ldi	r24, 0x00	; 0
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	92 c0       	rjmp	.+292    	; 0x1a8c <conv_brk+0x174>
    1968:	2e 35       	cpi	r18, 0x5E	; 94
    196a:	11 f4       	brne	.+4      	; 0x1970 <conv_brk+0x58>
    196c:	00 97       	sbiw	r24, 0x00	; 0
    196e:	51 f1       	breq	.+84     	; 0x19c4 <conv_brk+0xac>
    1970:	43 2f       	mov	r20, r19
    1972:	50 e0       	ldi	r21, 0x00	; 0
    1974:	48 17       	cp	r20, r24
    1976:	59 07       	cpc	r21, r25
    1978:	3c f4       	brge	.+14     	; 0x1988 <conv_brk+0x70>
    197a:	2d 35       	cpi	r18, 0x5D	; 93
    197c:	59 f1       	breq	.+86     	; 0x19d4 <conv_brk+0xbc>
    197e:	2d 32       	cpi	r18, 0x2D	; 45
    1980:	19 f4       	brne	.+6      	; 0x1988 <conv_brk+0x70>
    1982:	77 20       	and	r7, r7
    1984:	09 f1       	breq	.+66     	; 0x19c8 <conv_brk+0xb0>
    1986:	03 c0       	rjmp	.+6      	; 0x198e <conv_brk+0x76>
    1988:	77 20       	and	r7, r7
    198a:	09 f4       	brne	.+2      	; 0x198e <conv_brk+0x76>
    198c:	6a c0       	rjmp	.+212    	; 0x1a62 <conv_brk+0x14a>
    198e:	45 2d       	mov	r20, r5
    1990:	46 95       	lsr	r20
    1992:	46 95       	lsr	r20
    1994:	46 95       	lsr	r20
    1996:	d6 01       	movw	r26, r12
    1998:	a4 0f       	add	r26, r20
    199a:	b1 1d       	adc	r27, r1
    199c:	45 2d       	mov	r20, r5
    199e:	47 70       	andi	r20, 0x07	; 7
    19a0:	8b 01       	movw	r16, r22
    19a2:	02 c0       	rjmp	.+4      	; 0x19a8 <conv_brk+0x90>
    19a4:	00 0f       	add	r16, r16
    19a6:	11 1f       	adc	r17, r17
    19a8:	4a 95       	dec	r20
    19aa:	e2 f7       	brpl	.-8      	; 0x19a4 <conv_brk+0x8c>
    19ac:	a8 01       	movw	r20, r16
    19ae:	5c 91       	ld	r21, X
    19b0:	45 2b       	or	r20, r21
    19b2:	4c 93       	st	X, r20
    19b4:	65 14       	cp	r6, r5
    19b6:	59 f0       	breq	.+22     	; 0x19ce <conv_brk+0xb6>
    19b8:	56 14       	cp	r5, r6
    19ba:	10 f4       	brcc	.+4      	; 0x19c0 <conv_brk+0xa8>
    19bc:	53 94       	inc	r5
    19be:	e7 cf       	rjmp	.-50     	; 0x198e <conv_brk+0x76>
    19c0:	5a 94       	dec	r5
    19c2:	e5 cf       	rjmp	.-54     	; 0x198e <conv_brk+0x76>
    19c4:	31 e0       	ldi	r19, 0x01	; 1
    19c6:	04 c0       	rjmp	.+8      	; 0x19d0 <conv_brk+0xb8>
    19c8:	77 24       	eor	r7, r7
    19ca:	73 94       	inc	r7
    19cc:	01 c0       	rjmp	.+2      	; 0x19d0 <conv_brk+0xb8>
    19ce:	71 2c       	mov	r7, r1
    19d0:	01 96       	adiw	r24, 0x01	; 1
    19d2:	bf cf       	rjmp	.-130    	; 0x1952 <conv_brk+0x3a>
    19d4:	77 20       	and	r7, r7
    19d6:	19 f0       	breq	.+6      	; 0x19de <conv_brk+0xc6>
    19d8:	8e 81       	ldd	r24, Y+6	; 0x06
    19da:	80 62       	ori	r24, 0x20	; 32
    19dc:	8e 83       	std	Y+6, r24	; 0x06
    19de:	31 11       	cpse	r19, r1
    19e0:	03 c0       	rjmp	.+6      	; 0x19e8 <conv_brk+0xd0>
    19e2:	88 24       	eor	r8, r8
    19e4:	83 94       	inc	r8
    19e6:	17 c0       	rjmp	.+46     	; 0x1a16 <conv_brk+0xfe>
    19e8:	f6 01       	movw	r30, r12
    19ea:	9e 01       	movw	r18, r28
    19ec:	2f 5d       	subi	r18, 0xDF	; 223
    19ee:	3f 4f       	sbci	r19, 0xFF	; 255
    19f0:	80 81       	ld	r24, Z
    19f2:	80 95       	com	r24
    19f4:	81 93       	st	Z+, r24
    19f6:	2e 17       	cp	r18, r30
    19f8:	3f 07       	cpc	r19, r31
    19fa:	d1 f7       	brne	.-12     	; 0x19f0 <conv_brk+0xd8>
    19fc:	f2 cf       	rjmp	.-28     	; 0x19e2 <conv_brk+0xca>
    19fe:	e1 14       	cp	r14, r1
    1a00:	f1 04       	cpc	r15, r1
    1a02:	29 f0       	breq	.+10     	; 0x1a0e <conv_brk+0xf6>
    1a04:	d7 01       	movw	r26, r14
    1a06:	8c 93       	st	X, r24
    1a08:	f7 01       	movw	r30, r14
    1a0a:	31 96       	adiw	r30, 0x01	; 1
    1a0c:	7f 01       	movw	r14, r30
    1a0e:	9a 94       	dec	r9
    1a10:	81 2c       	mov	r8, r1
    1a12:	99 20       	and	r9, r9
    1a14:	f9 f0       	breq	.+62     	; 0x1a54 <conv_brk+0x13c>
    1a16:	c5 01       	movw	r24, r10
    1a18:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1a1c:	97 fd       	sbrc	r25, 7
    1a1e:	18 c0       	rjmp	.+48     	; 0x1a50 <conv_brk+0x138>
    1a20:	fc 01       	movw	r30, r24
    1a22:	ff 27       	eor	r31, r31
    1a24:	23 e0       	ldi	r18, 0x03	; 3
    1a26:	f5 95       	asr	r31
    1a28:	e7 95       	ror	r30
    1a2a:	2a 95       	dec	r18
    1a2c:	e1 f7       	brne	.-8      	; 0x1a26 <conv_brk+0x10e>
    1a2e:	ec 0d       	add	r30, r12
    1a30:	fd 1d       	adc	r31, r13
    1a32:	20 81       	ld	r18, Z
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	ac 01       	movw	r20, r24
    1a38:	47 70       	andi	r20, 0x07	; 7
    1a3a:	55 27       	eor	r21, r21
    1a3c:	02 c0       	rjmp	.+4      	; 0x1a42 <conv_brk+0x12a>
    1a3e:	35 95       	asr	r19
    1a40:	27 95       	ror	r18
    1a42:	4a 95       	dec	r20
    1a44:	e2 f7       	brpl	.-8      	; 0x1a3e <conv_brk+0x126>
    1a46:	20 fd       	sbrc	r18, 0
    1a48:	da cf       	rjmp	.-76     	; 0x19fe <conv_brk+0xe6>
    1a4a:	b5 01       	movw	r22, r10
    1a4c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <ungetc>
    1a50:	81 10       	cpse	r8, r1
    1a52:	87 cf       	rjmp	.-242    	; 0x1962 <conv_brk+0x4a>
    1a54:	e1 14       	cp	r14, r1
    1a56:	f1 04       	cpc	r15, r1
    1a58:	11 f0       	breq	.+4      	; 0x1a5e <conv_brk+0x146>
    1a5a:	d7 01       	movw	r26, r14
    1a5c:	1c 92       	st	X, r1
    1a5e:	c8 01       	movw	r24, r16
    1a60:	15 c0       	rjmp	.+42     	; 0x1a8c <conv_brk+0x174>
    1a62:	42 2f       	mov	r20, r18
    1a64:	46 95       	lsr	r20
    1a66:	46 95       	lsr	r20
    1a68:	46 95       	lsr	r20
    1a6a:	d6 01       	movw	r26, r12
    1a6c:	a4 0f       	add	r26, r20
    1a6e:	b1 1d       	adc	r27, r1
    1a70:	42 2f       	mov	r20, r18
    1a72:	47 70       	andi	r20, 0x07	; 7
    1a74:	8b 01       	movw	r16, r22
    1a76:	02 c0       	rjmp	.+4      	; 0x1a7c <conv_brk+0x164>
    1a78:	00 0f       	add	r16, r16
    1a7a:	11 1f       	adc	r17, r17
    1a7c:	4a 95       	dec	r20
    1a7e:	e2 f7       	brpl	.-8      	; 0x1a78 <conv_brk+0x160>
    1a80:	a8 01       	movw	r20, r16
    1a82:	5c 91       	ld	r21, X
    1a84:	45 2b       	or	r20, r21
    1a86:	4c 93       	st	X, r20
    1a88:	62 2e       	mov	r6, r18
    1a8a:	a2 cf       	rjmp	.-188    	; 0x19d0 <conv_brk+0xb8>
    1a8c:	a0 96       	adiw	r28, 0x20	; 32
    1a8e:	ef e0       	ldi	r30, 0x0F	; 15
    1a90:	0c 94 93 09 	jmp	0x1326	; 0x1326 <__epilogue_restores__+0x6>

00001a94 <vfscanf>:
    1a94:	a0 e0       	ldi	r26, 0x00	; 0
    1a96:	b0 e0       	ldi	r27, 0x00	; 0
    1a98:	e0 e5       	ldi	r30, 0x50	; 80
    1a9a:	fd e0       	ldi	r31, 0x0D	; 13
    1a9c:	0c 94 77 09 	jmp	0x12ee	; 0x12ee <__prologue_saves__+0x6>
    1aa0:	6c 01       	movw	r12, r24
    1aa2:	eb 01       	movw	r28, r22
    1aa4:	5a 01       	movw	r10, r20
    1aa6:	fc 01       	movw	r30, r24
    1aa8:	17 82       	std	Z+7, r1	; 0x07
    1aaa:	16 82       	std	Z+6, r1	; 0x06
    1aac:	51 2c       	mov	r5, r1
    1aae:	f6 01       	movw	r30, r12
    1ab0:	e3 80       	ldd	r14, Z+3	; 0x03
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	e3 fc       	sbrc	r14, 3
    1ab6:	85 91       	lpm	r24, Z+
    1ab8:	e3 fe       	sbrs	r14, 3
    1aba:	81 91       	ld	r24, Z+
    1abc:	18 2f       	mov	r17, r24
    1abe:	ef 01       	movw	r28, r30
    1ac0:	88 23       	and	r24, r24
    1ac2:	09 f4       	brne	.+2      	; 0x1ac6 <vfscanf+0x32>
    1ac4:	ee c0       	rjmp	.+476    	; 0x1ca2 <vfscanf+0x20e>
    1ac6:	90 e0       	ldi	r25, 0x00	; 0
    1ac8:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <isspace>
    1acc:	89 2b       	or	r24, r25
    1ace:	21 f0       	breq	.+8      	; 0x1ad8 <vfscanf+0x44>
    1ad0:	c6 01       	movw	r24, r12
    1ad2:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <skip_spaces>
    1ad6:	eb cf       	rjmp	.-42     	; 0x1aae <vfscanf+0x1a>
    1ad8:	15 32       	cpi	r17, 0x25	; 37
    1ada:	41 f4       	brne	.+16     	; 0x1aec <vfscanf+0x58>
    1adc:	fe 01       	movw	r30, r28
    1ade:	e3 fc       	sbrc	r14, 3
    1ae0:	15 91       	lpm	r17, Z+
    1ae2:	e3 fe       	sbrs	r14, 3
    1ae4:	11 91       	ld	r17, Z+
    1ae6:	ef 01       	movw	r28, r30
    1ae8:	15 32       	cpi	r17, 0x25	; 37
    1aea:	81 f4       	brne	.+32     	; 0x1b0c <vfscanf+0x78>
    1aec:	c6 01       	movw	r24, r12
    1aee:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1af2:	97 fd       	sbrc	r25, 7
    1af4:	d4 c0       	rjmp	.+424    	; 0x1c9e <vfscanf+0x20a>
    1af6:	41 2f       	mov	r20, r17
    1af8:	50 e0       	ldi	r21, 0x00	; 0
    1afa:	9c 01       	movw	r18, r24
    1afc:	33 27       	eor	r19, r19
    1afe:	24 17       	cp	r18, r20
    1b00:	35 07       	cpc	r19, r21
    1b02:	a9 f2       	breq	.-86     	; 0x1aae <vfscanf+0x1a>
    1b04:	b6 01       	movw	r22, r12
    1b06:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <ungetc>
    1b0a:	cb c0       	rjmp	.+406    	; 0x1ca2 <vfscanf+0x20e>
    1b0c:	1a 32       	cpi	r17, 0x2A	; 42
    1b0e:	39 f4       	brne	.+14     	; 0x1b1e <vfscanf+0x8a>
    1b10:	e3 fc       	sbrc	r14, 3
    1b12:	15 91       	lpm	r17, Z+
    1b14:	e3 fe       	sbrs	r14, 3
    1b16:	11 91       	ld	r17, Z+
    1b18:	ef 01       	movw	r28, r30
    1b1a:	01 e0       	ldi	r16, 0x01	; 1
    1b1c:	01 c0       	rjmp	.+2      	; 0x1b20 <vfscanf+0x8c>
    1b1e:	00 e0       	ldi	r16, 0x00	; 0
    1b20:	f1 2c       	mov	r15, r1
    1b22:	20 ed       	ldi	r18, 0xD0	; 208
    1b24:	21 0f       	add	r18, r17
    1b26:	2a 30       	cpi	r18, 0x0A	; 10
    1b28:	80 f4       	brcc	.+32     	; 0x1b4a <vfscanf+0xb6>
    1b2a:	02 60       	ori	r16, 0x02	; 2
    1b2c:	6f 2d       	mov	r22, r15
    1b2e:	70 e0       	ldi	r23, 0x00	; 0
    1b30:	80 e0       	ldi	r24, 0x00	; 0
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	40 e2       	ldi	r20, 0x20	; 32
    1b36:	0e 94 ba 0b 	call	0x1774	; 0x1774 <mulacc>
    1b3a:	f6 2e       	mov	r15, r22
    1b3c:	fe 01       	movw	r30, r28
    1b3e:	e3 fc       	sbrc	r14, 3
    1b40:	15 91       	lpm	r17, Z+
    1b42:	e3 fe       	sbrs	r14, 3
    1b44:	11 91       	ld	r17, Z+
    1b46:	ef 01       	movw	r28, r30
    1b48:	ec cf       	rjmp	.-40     	; 0x1b22 <vfscanf+0x8e>
    1b4a:	01 ff       	sbrs	r16, 1
    1b4c:	03 c0       	rjmp	.+6      	; 0x1b54 <vfscanf+0xc0>
    1b4e:	f1 10       	cpse	r15, r1
    1b50:	03 c0       	rjmp	.+6      	; 0x1b58 <vfscanf+0xc4>
    1b52:	a7 c0       	rjmp	.+334    	; 0x1ca2 <vfscanf+0x20e>
    1b54:	ff 24       	eor	r15, r15
    1b56:	fa 94       	dec	r15
    1b58:	18 36       	cpi	r17, 0x68	; 104
    1b5a:	19 f0       	breq	.+6      	; 0x1b62 <vfscanf+0xce>
    1b5c:	1c 36       	cpi	r17, 0x6C	; 108
    1b5e:	51 f0       	breq	.+20     	; 0x1b74 <vfscanf+0xe0>
    1b60:	10 c0       	rjmp	.+32     	; 0x1b82 <vfscanf+0xee>
    1b62:	fe 01       	movw	r30, r28
    1b64:	e3 fc       	sbrc	r14, 3
    1b66:	15 91       	lpm	r17, Z+
    1b68:	e3 fe       	sbrs	r14, 3
    1b6a:	11 91       	ld	r17, Z+
    1b6c:	ef 01       	movw	r28, r30
    1b6e:	18 36       	cpi	r17, 0x68	; 104
    1b70:	41 f4       	brne	.+16     	; 0x1b82 <vfscanf+0xee>
    1b72:	08 60       	ori	r16, 0x08	; 8
    1b74:	04 60       	ori	r16, 0x04	; 4
    1b76:	fe 01       	movw	r30, r28
    1b78:	e3 fc       	sbrc	r14, 3
    1b7a:	15 91       	lpm	r17, Z+
    1b7c:	e3 fe       	sbrs	r14, 3
    1b7e:	11 91       	ld	r17, Z+
    1b80:	ef 01       	movw	r28, r30
    1b82:	11 23       	and	r17, r17
    1b84:	09 f4       	brne	.+2      	; 0x1b88 <vfscanf+0xf4>
    1b86:	8d c0       	rjmp	.+282    	; 0x1ca2 <vfscanf+0x20e>
    1b88:	61 2f       	mov	r22, r17
    1b8a:	70 e0       	ldi	r23, 0x00	; 0
    1b8c:	8a e6       	ldi	r24, 0x6A	; 106
    1b8e:	91 e0       	ldi	r25, 0x01	; 1
    1b90:	0e 94 64 0e 	call	0x1cc8	; 0x1cc8 <strchr_P>
    1b94:	89 2b       	or	r24, r25
    1b96:	09 f4       	brne	.+2      	; 0x1b9a <vfscanf+0x106>
    1b98:	84 c0       	rjmp	.+264    	; 0x1ca2 <vfscanf+0x20e>
    1b9a:	00 fd       	sbrc	r16, 0
    1b9c:	07 c0       	rjmp	.+14     	; 0x1bac <vfscanf+0x118>
    1b9e:	f5 01       	movw	r30, r10
    1ba0:	80 80       	ld	r8, Z
    1ba2:	91 80       	ldd	r9, Z+1	; 0x01
    1ba4:	c5 01       	movw	r24, r10
    1ba6:	02 96       	adiw	r24, 0x02	; 2
    1ba8:	5c 01       	movw	r10, r24
    1baa:	02 c0       	rjmp	.+4      	; 0x1bb0 <vfscanf+0x11c>
    1bac:	81 2c       	mov	r8, r1
    1bae:	91 2c       	mov	r9, r1
    1bb0:	1e 36       	cpi	r17, 0x6E	; 110
    1bb2:	51 f4       	brne	.+20     	; 0x1bc8 <vfscanf+0x134>
    1bb4:	f6 01       	movw	r30, r12
    1bb6:	46 81       	ldd	r20, Z+6	; 0x06
    1bb8:	57 81       	ldd	r21, Z+7	; 0x07
    1bba:	60 e0       	ldi	r22, 0x00	; 0
    1bbc:	70 e0       	ldi	r23, 0x00	; 0
    1bbe:	20 2f       	mov	r18, r16
    1bc0:	c4 01       	movw	r24, r8
    1bc2:	0e 94 ae 0b 	call	0x175c	; 0x175c <putval>
    1bc6:	73 cf       	rjmp	.-282    	; 0x1aae <vfscanf+0x1a>
    1bc8:	13 36       	cpi	r17, 0x63	; 99
    1bca:	a9 f4       	brne	.+42     	; 0x1bf6 <vfscanf+0x162>
    1bcc:	01 fd       	sbrc	r16, 1
    1bce:	02 c0       	rjmp	.+4      	; 0x1bd4 <vfscanf+0x140>
    1bd0:	ff 24       	eor	r15, r15
    1bd2:	f3 94       	inc	r15
    1bd4:	c6 01       	movw	r24, r12
    1bd6:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1bda:	97 fd       	sbrc	r25, 7
    1bdc:	60 c0       	rjmp	.+192    	; 0x1c9e <vfscanf+0x20a>
    1bde:	81 14       	cp	r8, r1
    1be0:	91 04       	cpc	r9, r1
    1be2:	29 f0       	breq	.+10     	; 0x1bee <vfscanf+0x15a>
    1be4:	f4 01       	movw	r30, r8
    1be6:	80 83       	st	Z, r24
    1be8:	c4 01       	movw	r24, r8
    1bea:	01 96       	adiw	r24, 0x01	; 1
    1bec:	4c 01       	movw	r8, r24
    1bee:	fa 94       	dec	r15
    1bf0:	f1 10       	cpse	r15, r1
    1bf2:	f0 cf       	rjmp	.-32     	; 0x1bd4 <vfscanf+0x140>
    1bf4:	50 c0       	rjmp	.+160    	; 0x1c96 <vfscanf+0x202>
    1bf6:	1b 35       	cpi	r17, 0x5B	; 91
    1bf8:	59 f4       	brne	.+22     	; 0x1c10 <vfscanf+0x17c>
    1bfa:	9e 01       	movw	r18, r28
    1bfc:	a4 01       	movw	r20, r8
    1bfe:	6f 2d       	mov	r22, r15
    1c00:	c6 01       	movw	r24, r12
    1c02:	0e 94 8c 0c 	call	0x1918	; 0x1918 <conv_brk>
    1c06:	ec 01       	movw	r28, r24
    1c08:	89 2b       	or	r24, r25
    1c0a:	09 f0       	breq	.+2      	; 0x1c0e <vfscanf+0x17a>
    1c0c:	44 c0       	rjmp	.+136    	; 0x1c96 <vfscanf+0x202>
    1c0e:	3e c0       	rjmp	.+124    	; 0x1c8c <vfscanf+0x1f8>
    1c10:	c6 01       	movw	r24, r12
    1c12:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <skip_spaces>
    1c16:	97 fd       	sbrc	r25, 7
    1c18:	42 c0       	rjmp	.+132    	; 0x1c9e <vfscanf+0x20a>
    1c1a:	1f 36       	cpi	r17, 0x6F	; 111
    1c1c:	61 f1       	breq	.+88     	; 0x1c76 <vfscanf+0x1e2>
    1c1e:	28 f4       	brcc	.+10     	; 0x1c2a <vfscanf+0x196>
    1c20:	14 36       	cpi	r17, 0x64	; 100
    1c22:	39 f1       	breq	.+78     	; 0x1c72 <vfscanf+0x1de>
    1c24:	19 36       	cpi	r17, 0x69	; 105
    1c26:	51 f1       	breq	.+84     	; 0x1c7c <vfscanf+0x1e8>
    1c28:	28 c0       	rjmp	.+80     	; 0x1c7a <vfscanf+0x1e6>
    1c2a:	13 37       	cpi	r17, 0x73	; 115
    1c2c:	71 f0       	breq	.+28     	; 0x1c4a <vfscanf+0x1b6>
    1c2e:	15 37       	cpi	r17, 0x75	; 117
    1c30:	01 f1       	breq	.+64     	; 0x1c72 <vfscanf+0x1de>
    1c32:	23 c0       	rjmp	.+70     	; 0x1c7a <vfscanf+0x1e6>
    1c34:	81 14       	cp	r8, r1
    1c36:	91 04       	cpc	r9, r1
    1c38:	29 f0       	breq	.+10     	; 0x1c44 <vfscanf+0x1b0>
    1c3a:	f4 01       	movw	r30, r8
    1c3c:	60 82       	st	Z, r6
    1c3e:	c4 01       	movw	r24, r8
    1c40:	01 96       	adiw	r24, 0x01	; 1
    1c42:	4c 01       	movw	r8, r24
    1c44:	fa 94       	dec	r15
    1c46:	ff 20       	and	r15, r15
    1c48:	71 f0       	breq	.+28     	; 0x1c66 <vfscanf+0x1d2>
    1c4a:	c6 01       	movw	r24, r12
    1c4c:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <fgetc>
    1c50:	3c 01       	movw	r6, r24
    1c52:	97 fd       	sbrc	r25, 7
    1c54:	08 c0       	rjmp	.+16     	; 0x1c66 <vfscanf+0x1d2>
    1c56:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <isspace>
    1c5a:	89 2b       	or	r24, r25
    1c5c:	59 f3       	breq	.-42     	; 0x1c34 <vfscanf+0x1a0>
    1c5e:	b6 01       	movw	r22, r12
    1c60:	c3 01       	movw	r24, r6
    1c62:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <ungetc>
    1c66:	81 14       	cp	r8, r1
    1c68:	91 04       	cpc	r9, r1
    1c6a:	a9 f0       	breq	.+42     	; 0x1c96 <vfscanf+0x202>
    1c6c:	f4 01       	movw	r30, r8
    1c6e:	10 82       	st	Z, r1
    1c70:	12 c0       	rjmp	.+36     	; 0x1c96 <vfscanf+0x202>
    1c72:	00 62       	ori	r16, 0x20	; 32
    1c74:	03 c0       	rjmp	.+6      	; 0x1c7c <vfscanf+0x1e8>
    1c76:	00 61       	ori	r16, 0x10	; 16
    1c78:	01 c0       	rjmp	.+2      	; 0x1c7c <vfscanf+0x1e8>
    1c7a:	00 64       	ori	r16, 0x40	; 64
    1c7c:	20 2f       	mov	r18, r16
    1c7e:	a4 01       	movw	r20, r8
    1c80:	6f 2d       	mov	r22, r15
    1c82:	c6 01       	movw	r24, r12
    1c84:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <conv_int>
    1c88:	81 11       	cpse	r24, r1
    1c8a:	05 c0       	rjmp	.+10     	; 0x1c96 <vfscanf+0x202>
    1c8c:	f6 01       	movw	r30, r12
    1c8e:	83 81       	ldd	r24, Z+3	; 0x03
    1c90:	80 73       	andi	r24, 0x30	; 48
    1c92:	29 f4       	brne	.+10     	; 0x1c9e <vfscanf+0x20a>
    1c94:	06 c0       	rjmp	.+12     	; 0x1ca2 <vfscanf+0x20e>
    1c96:	00 fd       	sbrc	r16, 0
    1c98:	0a cf       	rjmp	.-492    	; 0x1aae <vfscanf+0x1a>
    1c9a:	53 94       	inc	r5
    1c9c:	08 cf       	rjmp	.-496    	; 0x1aae <vfscanf+0x1a>
    1c9e:	55 20       	and	r5, r5
    1ca0:	19 f0       	breq	.+6      	; 0x1ca8 <vfscanf+0x214>
    1ca2:	85 2d       	mov	r24, r5
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	02 c0       	rjmp	.+4      	; 0x1cac <vfscanf+0x218>
    1ca8:	8f ef       	ldi	r24, 0xFF	; 255
    1caa:	9f ef       	ldi	r25, 0xFF	; 255
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	ef e0       	ldi	r30, 0x0F	; 15
    1cb2:	0c 94 93 09 	jmp	0x1326	; 0x1326 <__epilogue_restores__+0x6>

00001cb6 <isspace>:
    1cb6:	91 11       	cpse	r25, r1
    1cb8:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__ctype_isfalse>
    1cbc:	80 32       	cpi	r24, 0x20	; 32
    1cbe:	19 f0       	breq	.+6      	; 0x1cc6 <isspace+0x10>
    1cc0:	89 50       	subi	r24, 0x09	; 9
    1cc2:	85 50       	subi	r24, 0x05	; 5
    1cc4:	c8 f7       	brcc	.-14     	; 0x1cb8 <isspace+0x2>
    1cc6:	08 95       	ret

00001cc8 <strchr_P>:
    1cc8:	fc 01       	movw	r30, r24
    1cca:	05 90       	lpm	r0, Z+
    1ccc:	06 16       	cp	r0, r22
    1cce:	21 f0       	breq	.+8      	; 0x1cd8 <strchr_P+0x10>
    1cd0:	00 20       	and	r0, r0
    1cd2:	d9 f7       	brne	.-10     	; 0x1cca <strchr_P+0x2>
    1cd4:	c0 01       	movw	r24, r0
    1cd6:	08 95       	ret
    1cd8:	31 97       	sbiw	r30, 0x01	; 1
    1cda:	cf 01       	movw	r24, r30
    1cdc:	08 95       	ret

00001cde <fgetc>:
    1cde:	cf 93       	push	r28
    1ce0:	df 93       	push	r29
    1ce2:	ec 01       	movw	r28, r24
    1ce4:	2b 81       	ldd	r18, Y+3	; 0x03
    1ce6:	20 ff       	sbrs	r18, 0
    1ce8:	33 c0       	rjmp	.+102    	; 0x1d50 <fgetc+0x72>
    1cea:	26 ff       	sbrs	r18, 6
    1cec:	0a c0       	rjmp	.+20     	; 0x1d02 <fgetc+0x24>
    1cee:	2f 7b       	andi	r18, 0xBF	; 191
    1cf0:	2b 83       	std	Y+3, r18	; 0x03
    1cf2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cf4:	9f 81       	ldd	r25, Y+7	; 0x07
    1cf6:	01 96       	adiw	r24, 0x01	; 1
    1cf8:	9f 83       	std	Y+7, r25	; 0x07
    1cfa:	8e 83       	std	Y+6, r24	; 0x06
    1cfc:	8a 81       	ldd	r24, Y+2	; 0x02
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	29 c0       	rjmp	.+82     	; 0x1d54 <fgetc+0x76>
    1d02:	22 ff       	sbrs	r18, 2
    1d04:	0f c0       	rjmp	.+30     	; 0x1d24 <fgetc+0x46>
    1d06:	e8 81       	ld	r30, Y
    1d08:	f9 81       	ldd	r31, Y+1	; 0x01
    1d0a:	80 81       	ld	r24, Z
    1d0c:	08 2e       	mov	r0, r24
    1d0e:	00 0c       	add	r0, r0
    1d10:	99 0b       	sbc	r25, r25
    1d12:	00 97       	sbiw	r24, 0x00	; 0
    1d14:	19 f4       	brne	.+6      	; 0x1d1c <fgetc+0x3e>
    1d16:	20 62       	ori	r18, 0x20	; 32
    1d18:	2b 83       	std	Y+3, r18	; 0x03
    1d1a:	1a c0       	rjmp	.+52     	; 0x1d50 <fgetc+0x72>
    1d1c:	31 96       	adiw	r30, 0x01	; 1
    1d1e:	f9 83       	std	Y+1, r31	; 0x01
    1d20:	e8 83       	st	Y, r30
    1d22:	0e c0       	rjmp	.+28     	; 0x1d40 <fgetc+0x62>
    1d24:	ea 85       	ldd	r30, Y+10	; 0x0a
    1d26:	fb 85       	ldd	r31, Y+11	; 0x0b
    1d28:	09 95       	icall
    1d2a:	97 ff       	sbrs	r25, 7
    1d2c:	09 c0       	rjmp	.+18     	; 0x1d40 <fgetc+0x62>
    1d2e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d30:	01 96       	adiw	r24, 0x01	; 1
    1d32:	11 f0       	breq	.+4      	; 0x1d38 <fgetc+0x5a>
    1d34:	80 e2       	ldi	r24, 0x20	; 32
    1d36:	01 c0       	rjmp	.+2      	; 0x1d3a <fgetc+0x5c>
    1d38:	80 e1       	ldi	r24, 0x10	; 16
    1d3a:	82 2b       	or	r24, r18
    1d3c:	8b 83       	std	Y+3, r24	; 0x03
    1d3e:	08 c0       	rjmp	.+16     	; 0x1d50 <fgetc+0x72>
    1d40:	2e 81       	ldd	r18, Y+6	; 0x06
    1d42:	3f 81       	ldd	r19, Y+7	; 0x07
    1d44:	2f 5f       	subi	r18, 0xFF	; 255
    1d46:	3f 4f       	sbci	r19, 0xFF	; 255
    1d48:	3f 83       	std	Y+7, r19	; 0x07
    1d4a:	2e 83       	std	Y+6, r18	; 0x06
    1d4c:	99 27       	eor	r25, r25
    1d4e:	02 c0       	rjmp	.+4      	; 0x1d54 <fgetc+0x76>
    1d50:	8f ef       	ldi	r24, 0xFF	; 255
    1d52:	9f ef       	ldi	r25, 0xFF	; 255
    1d54:	df 91       	pop	r29
    1d56:	cf 91       	pop	r28
    1d58:	08 95       	ret

00001d5a <ungetc>:
    1d5a:	fb 01       	movw	r30, r22
    1d5c:	23 81       	ldd	r18, Z+3	; 0x03
    1d5e:	20 ff       	sbrs	r18, 0
    1d60:	12 c0       	rjmp	.+36     	; 0x1d86 <ungetc+0x2c>
    1d62:	26 fd       	sbrc	r18, 6
    1d64:	10 c0       	rjmp	.+32     	; 0x1d86 <ungetc+0x2c>
    1d66:	8f 3f       	cpi	r24, 0xFF	; 255
    1d68:	3f ef       	ldi	r19, 0xFF	; 255
    1d6a:	93 07       	cpc	r25, r19
    1d6c:	61 f0       	breq	.+24     	; 0x1d86 <ungetc+0x2c>
    1d6e:	82 83       	std	Z+2, r24	; 0x02
    1d70:	2f 7d       	andi	r18, 0xDF	; 223
    1d72:	20 64       	ori	r18, 0x40	; 64
    1d74:	23 83       	std	Z+3, r18	; 0x03
    1d76:	26 81       	ldd	r18, Z+6	; 0x06
    1d78:	37 81       	ldd	r19, Z+7	; 0x07
    1d7a:	21 50       	subi	r18, 0x01	; 1
    1d7c:	31 09       	sbc	r19, r1
    1d7e:	37 83       	std	Z+7, r19	; 0x07
    1d80:	26 83       	std	Z+6, r18	; 0x06
    1d82:	99 27       	eor	r25, r25
    1d84:	08 95       	ret
    1d86:	8f ef       	ldi	r24, 0xFF	; 255
    1d88:	9f ef       	ldi	r25, 0xFF	; 255
    1d8a:	08 95       	ret

00001d8c <__ctype_isfalse>:
    1d8c:	99 27       	eor	r25, r25
    1d8e:	88 27       	eor	r24, r24

00001d90 <__ctype_istrue>:
    1d90:	08 95       	ret

00001d92 <_exit>:
    1d92:	f8 94       	cli

00001d94 <__stop_program>:
    1d94:	ff cf       	rjmp	.-2      	; 0x1d94 <__stop_program>
